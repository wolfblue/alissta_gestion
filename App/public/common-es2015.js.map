{"version":3,"sources":["./node_modules/@capacitor/camera/dist/esm/definitions.js","./node_modules/@capacitor/camera/dist/esm/index.js","./node_modules/@ionic/core/dist/esm/button-active-d4bd4f74.js","./node_modules/@ionic/core/dist/esm/framework-delegate-94e770cc.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/commons/asunto-mensaje.ts","./src/app/entities/autoevaluacion-covid19.ts","./src/app/entities/chequeo-covid19.ts","./src/app/entities/condiciones-salud.ts","./src/app/entities/proceso.ts","./src/app/entities/sede.ts","./src/app/entities/tema-asesoria.ts","./src/app/interfaces/edinfo-auditoria-app.ts","./src/app/services/SST/menu-sstservice.service.ts","./src/app/services/asesoria-sst.service.ts","./src/app/services/autoevaluacion-covid19.service.ts","./src/app/services/chequeo-covid19.service.ts","./src/app/services/empresa.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AAC9B;AACP;AACA;AACA;AACA,CAAC,0CAA0C;AACpC;AACP;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C,uC;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACjD,eAAe,sEAAc;AAC7B,eAAe,uMAAe;AAC9B,CAAC;AAC6B;AACZ;AAClB,iC;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACkE;AACnE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA,mEAAmE,qDAAoB;AACvF,kEAAkE,qDAAsB;AACxF;AACA;AACA,MAAM,6DAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AAA8D;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"common-es2015.js","sourcesContent":["export var CameraSource;\n(function (CameraSource) {\n    /**\n     * Prompts the user to select either the photo album or take a photo.\n     */\n    CameraSource[\"Prompt\"] = \"PROMPT\";\n    /**\n     * Take a new photo using the camera.\n     */\n    CameraSource[\"Camera\"] = \"CAMERA\";\n    /**\n     * Pick an existing photo from the gallery or photo album.\n     */\n    CameraSource[\"Photos\"] = \"PHOTOS\";\n})(CameraSource || (CameraSource = {}));\nexport var CameraDirection;\n(function (CameraDirection) {\n    CameraDirection[\"Rear\"] = \"REAR\";\n    CameraDirection[\"Front\"] = \"FRONT\";\n})(CameraDirection || (CameraDirection = {}));\nexport var CameraResultType;\n(function (CameraResultType) {\n    CameraResultType[\"Uri\"] = \"uri\";\n    CameraResultType[\"Base64\"] = \"base64\";\n    CameraResultType[\"DataUrl\"] = \"dataUrl\";\n})(CameraResultType || (CameraResultType = {}));\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\nconst Camera = registerPlugin('Camera', {\n    web: () => import('./web').then(m => new m.CameraWeb()),\n});\nexport * from './definitions';\nexport { Camera };\n//# sourceMappingURL=index.js.map","import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-34cb2743.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-1457892a.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export const ASUNTO_MENSAJE_RENDICION_CUENTAS = 'Rendición de Cuentas';\n","import { CompanyData, Geolocation, UserData } from './condiciones-salud';\nimport { Entity } from './entity';\n\n/**\n * Pregunta de la encuesta para autoevaluación COVID-19.\n */\nexport class Question extends Entity {\n  /**\n   * Texto descriptivo de la pregunta.\n   */\n  description: string;\n\n  /**\n   * Respuesta de la pregunta.\n   */\n  answer: any;\n\n  /**\n   * Opciones de respueta disponibles para esta pregunta.\n   */\n  options: { label: string; value: any }[];\n\n  /**\n   * Nombre del campo de la pregunta.\n   */\n  get name(): string {\n    return this._name;\n  }\n\n  private _name: string;\n\n  /**\n   * Nombres de los campos de las preguntas. Esto concuerda con el nombre que recibe el servicio.\n   */\n  private readonly FIELD_NAMES = {\n    1: 'PreguntaUno',\n    2: 'PreguntaDos',\n    3: 'PreguntaTres',\n    4: 'PreguntaCuatro',\n    5: 'PreguntaCinco',\n    6: 'PreguntaSeis',\n    7: 'PreguntaSiete',\n    8: 'PreguntaOcho',\n    9: 'PreguntaNueve',\n    10: 'PreguntaDiez',\n    11: 'PreguntaOnce',\n    12: 'PreguntaDoce',\n    13: 'PreguntaTrece',\n    14: 'PreguntaCatorce',\n    15: 'PreguntaQuince',\n  };\n\n  constructor(json: any) {\n    super(json.PK_ID_AutoEvaluacionCovidPreguntas);\n\n    this.description = json.descripcionPregunta;\n    this.options = json.opciones;\n    this._name = this.FIELD_NAMES[this.id];\n  }\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    if (this.id === 3) {\n      this.answer = [undefined, ''].indexOf(this.answer) > -1 ? 'No Aplica' : this.answer;\n    }\n\n    return { [this.name]: this.answer };\n  }\n}\n\n/**\n * Cuestionario de autoevaluación COVID-19.\n */\nexport class Poll extends Entity {\n  /**\n   * Preguntas del cuestionario.\n   */\n  questions: Question[];\n\n  /**\n   * Ubicación del dispositivo desde el que se envían las preguntas del cuestionario.\n   */\n  geolocation: Geolocation;\n\n  /**\n   * Datos de usuario.\n   */\n  userData: UserData;\n\n  /**\n   * Datos de la compañía o contratante.\n   */\n  companyData: CompanyData;\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    let ret = {};\n\n    this.questions = this.questions ? this.questions : [];\n    this.geolocation = this.geolocation ? this.geolocation : new Geolocation();\n    this.userData = this.userData ? this.userData : new UserData();\n    this.companyData = this.companyData ? this.companyData : new CompanyData();\n\n    this.questions.forEach(q => {\n      ret = { ...ret, ...q.deserialize() };\n    });\n\n    ret = { ...ret, ...this.geolocation.deserialize() };\n    ret = { ...ret, ...this.userData.deserialize() };\n    ret = { ...ret, ...this.companyData.deserialize() };\n\n    return ret;\n  }\n}\n","import { CompanyData as CondicionesCompanyData, Geolocation, UserData as CondicionesUserData } from './condiciones-salud';\nimport { Entity } from './entity';\n\n/**\n * Pregunta de la encuesta para chequeo médico COVID-19.\n */\nexport class Question {\n  /**\n   * Respuesta de la pregunta.\n   */\n  answer: any;\n\n  /**\n   * Nombre del campo de la pregunta.\n   */\n  get name(): string {\n    return this._name;\n  }\n\n  private _name: string;\n\n  /**\n   * Nombres de los campos de las preguntas. Esto concuerda con el nombre que recibe el servicio.\n   */\n  private readonly FIELD_NAMES = {\n    habitualWork: 'SectorLabolHabitual',\n    specificWork: 'DetalleLabolHabitual',\n    questionOne: 'PreguntaUno',\n    questionTwo: 'PreguntaDos',\n    questionThree: 'PreguntaTres',\n    questionFour: 'PreguntaCuatro',\n    questionFive: 'PreguntaCincoUno',\n    questionSix: 'PreguntaCincoDos',\n    questionSeven: 'PreguntaCincoTres',\n    questionEight: 'PreguntaCincoCuatro',\n    questionNine: 'PreguntaCincoCinco',\n    clearQuestionFive: 'PreguntaCincoSeis',\n    questionTen: 'PreguntaSeis',\n    questionEleven: 'PreguntaSiete',\n    questionTwelve: 'PreguntaOchoUno',\n    questionThirdteen: 'PreguntaOchoDos',\n    questionFourteen: 'PreguntaOchoTres',\n    questionFifteen: 'PreguntaOchoCuatro',\n    questionSixteen: 'PreguntaOchoCinco',\n    questionSeventeen: 'PreguntaOchoSeis',\n    questionEighteen: 'PreguntaOchoSiete',\n    questionNineteen: 'PreguntaOchoOcho',\n    clearQuestionEight: 'PreguntaOchoNueve',\n    questionTwenty: 'PreguntaNueve',\n    questionTwentyOne: 'PreguntaDiez',\n  };\n\n  constructor(name: string, answer: any) {\n    this._name = name;\n    this.answer = answer;\n  }\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    return { [this.FIELD_NAMES[this.name]]: this.answer };\n  }\n}\n\n/**\n * Datos del usuario que realiza el cuestionario de chequeo médico COVID-19.\n */\nexport class UserData extends CondicionesUserData {\n  protected readonly FIELD_NAMES = {\n    firstName: 'PrimerNombreTrabajador',\n    middleName: 'SegundoNombreTrabajador',\n    surname: 'PrimerApellidoTrabajador',\n    secondSurname: 'SegundoApellidoTrabajador',\n    email: 'CorreoTrabajador',\n    phone: 'NumeroTelefono',\n    ip: 'IP',\n    idType: 'TipoDocTrabajador',\n    idNumber: 'NumeroDocumentoTrabajador',\n    sex: 'SexoTrabajador',\n    birthday: 'FechaNacimiento',\n    idEPS: 'IdEPS',\n    nameEPS: 'NombreEPS',\n    address: 'DireccionTrabajador',\n    bussinessID: 'ID_OCUPACION',\n    businessName: 'NOMBRE_OCUPACION',\n    idAdminArea: 'IDDepartamentoTrabajador',\n    nameAdminArea: 'NombreDepartamentoTrabajador',\n    idSubAdminArea: 'IDMunicipioTrabajador',\n    nameSubAdminArea: 'NombreMunicipioTrabajador',\n    agree: 'AceptaParticipacion',\n  };\n\n  deserialize(): any {\n    const ret = super.deserialize();\n\n    // Campos no necesarios para este consumo\n\n    delete ret[this.FIELD_NAMES.bussinessID];\n    delete ret[this.FIELD_NAMES.businessName];\n\n    return ret;\n  }\n}\n\n/**\n * Datos de la compañía o contratante que emplea al usuario que realiza la encuesta.\n */\nexport class CompanyData extends CondicionesCompanyData {\n  protected readonly FIELD_NAMES = {\n    idType: 'tipoDocEmpresa',\n    idNumber: 'NitEmpresa',\n    businessName: 'RazonSocial',\n    businessID: 'ActividadEconomicaPrincipal',\n    businessDescription: 'DescripcionActivdadEconomicaPrincipal',\n    idAdminArea: 'IDDepartamentoEmpresa',\n    nameAdminArea: 'NombreDepartamentoEmpresa',\n    idSubAdminArea: 'IDMunicipioEmpresa',\n    nameSubAdminArea: 'NombreMunicipioEmpresa',\n    address: 'DireccionEmpresa',\n  };\n}\n\n/**\n * Cuestionario de chequeo médico COVID-19.\n */\nexport class Poll extends Entity {\n  /**\n   * Preguntas del cuestionario.\n   */\n  questions: Question[];\n\n  /**\n   * Ubicación del dispositivo desde el que se envían las preguntas del cuestionario.\n   */\n  geolocation: Geolocation;\n\n  /**\n   * Datos de usuario.\n   */\n  userData: UserData;\n\n  /**\n   * Datos de la compañía o contratante.\n   */\n  companyData: CompanyData;\n\n  /**\n   * Fecha de aplicación del cuestionario.\n   */\n  date: string;\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    let ret = {};\n\n    this.questions = this.questions ? this.questions : [];\n    this.geolocation = this.geolocation ? this.geolocation : new Geolocation();\n    this.userData = this.userData ? this.userData : new UserData();\n    this.companyData = this.companyData ? this.companyData : new CompanyData();\n\n    this.questions.forEach(q => {\n      ret = { ...ret, ...q.deserialize() };\n    });\n\n    ret = { ...ret, ...this.geolocation.deserialize() };\n    ret = { ...ret, ...this.userData.deserialize() };\n    ret = { ...ret, ...this.companyData.deserialize() };\n\n    return ret;\n  }\n}\n","/**\n * Parámetros de ubicación física.\n */\nexport class Geolocation {\n  /**\n   * Latitud.\n   */\n  latitude: string;\n\n  /**\n   * Longitud.\n   */\n  longitude: string;\n\n  /**\n   * Dirección.\n   */\n  address: string;\n\n  /**\n   * Nombres de los campos de las preguntas. Esto concuerda con el nombre que recibe el servicio.\n   */\n  private readonly FIELD_NAMES = {\n    latitude: 'Latitud',\n    longitude: 'Longitud',\n    address: 'Direccion',\n  };\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    return {\n      [this.FIELD_NAMES.latitude]: this.latitude,\n      [this.FIELD_NAMES.longitude]: this.longitude,\n      [this.FIELD_NAMES.address]: this.address,\n    };\n  }\n}\n\n/**\n * Datos del usuario que realiza el cuestionario de autoevaluación COVID-19.\n */\nexport class UserData {\n  /**\n   * Primer nombre.\n   */\n  firstName: string;\n\n  /**\n   * Segundo nombre.\n   */\n  middleName: string;\n\n  /**\n   * Primer apellido.\n   */\n  surname: string;\n\n  /**\n   * Segundo apellido.\n   */\n  secondSurname: string;\n\n  /**\n   * Dirección de correo electrónico.\n   */\n  email: string;\n\n  /**\n   * Número telefónico.\n   */\n  phone: string;\n\n  /**\n   * Dirección _IP_.\n   */\n  ip: string;\n\n  /**\n   * Tipo de documento de identificación.\n   */\n  idType: string;\n\n  /**\n   * Número del documento de identificación.\n   */\n  idNumber: string;\n\n  /**\n   * Sexo del trabajador.\n   */\n  sex: string;\n\n  /**\n   * Fecha de nacimiento.\n   */\n  birthday: string;\n\n  /**\n   * Identificador de EPS.\n   */\n  idEPS: string;\n\n  /**\n   * Nombre de EPS.\n   */\n  nameEPS: string;\n\n  /**\n   * Dirección.\n   */\n  address: string;\n\n  /**\n   * Identificador de la ocupación.\n   */\n  bussinessID: string;\n\n  /**\n   * Nombre de la ocupación.\n   */\n  businessName: string;\n\n  /**\n   * Identificador del departamento de ubicación.\n   */\n  idAdminArea: number;\n\n  /**\n   * Nombre del departamento de ubicación.\n   */\n  nameAdminArea: string;\n\n  /**\n   * Identificador del municipio de ubicación.\n   */\n  idSubAdminArea: number;\n\n  /**\n   * Nombre del municipio de ubicación.\n   */\n  nameSubAdminArea: string;\n\n  /**\n   * Indica si el usuario ha aceptado la política de tratamiento de datos personales.\n   */\n  agree: boolean;\n\n  /**\n   * Nombres de los campos de las preguntas. Esto concuerda con el nombre que recibe el servicio.\n   */\n  protected readonly FIELD_NAMES = {\n    firstName: 'NombreTrabajador',\n    middleName: 'SegundoNombreTrabajador',\n    surname: 'ApellidosUsuario',\n    secondSurname: 'SegundoApellidoTrabajador',\n    email: 'CorreoTrabajador',\n    phone: 'telefonoTrabajador',\n    ip: 'Direccion_Ip',\n    idType: 'TipoDocumentoTrabajador',\n    idNumber: 'NumeroDocumentoTrabajador',\n    sex: 'SEXO',\n    birthday: 'FECHA_NACIMIENTO',\n    idEPS: 'ID_EPS',\n    nameEPS: 'NOMBRE_EPS',\n    address: 'DIRECCION_PERSONA',\n    bussinessID: 'ID_OCUPACION',\n    businessName: 'NOMBRE_OCUPACION',\n    idAdminArea: 'ID_DEPARTAMENTO',\n    nameAdminArea: 'NOMBRE_DEPARTAMENTO',\n    idSubAdminArea: 'ID_MUNICIPIO',\n    nameSubAdminArea: 'NOMBRE_MUNICIPIO',\n    agree: 'AceptaParticipacion',\n  };\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    return {\n      [this.FIELD_NAMES.firstName]: this.firstName,\n      [this.FIELD_NAMES.middleName]: this.middleName,\n      [this.FIELD_NAMES.surname]: this.surname,\n      [this.FIELD_NAMES.secondSurname]: this.secondSurname,\n      [this.FIELD_NAMES.email]: this.email,\n      [this.FIELD_NAMES.phone]: this.phone,\n      [this.FIELD_NAMES.ip]: this.ip,\n      [this.FIELD_NAMES.idType]: this.idType,\n      [this.FIELD_NAMES.idNumber]: this.idNumber,\n      [this.FIELD_NAMES.sex]: this.sex,\n      [this.FIELD_NAMES.birthday]: this.birthday,\n      [this.FIELD_NAMES.idEPS]: this.idEPS,\n      [this.FIELD_NAMES.nameEPS]: this.nameEPS,\n      [this.FIELD_NAMES.address]: this.address,\n      [this.FIELD_NAMES.bussinessID]: this.bussinessID,\n      [this.FIELD_NAMES.businessName]: this.businessName,\n      [this.FIELD_NAMES.idAdminArea]: this.idAdminArea,\n      [this.FIELD_NAMES.nameAdminArea]: this.nameAdminArea,\n      [this.FIELD_NAMES.idSubAdminArea]: this.idSubAdminArea,\n      [this.FIELD_NAMES.nameSubAdminArea]: this.nameSubAdminArea,\n      [this.FIELD_NAMES.agree]: this.agree,\n    };\n  }\n}\n\n/**\n * Datos de la compañía o contratante que emplea al usuario que realiza la encuesta.\n */\nexport class CompanyData {\n  /**\n   * Tipo de documento de identificación.\n   */\n  idType: string;\n\n  /**\n   * Número de información tributaria.\n   */\n  idNumber: string;\n\n  /**\n   * Razón social.\n   */\n  businessName: string;\n\n  /**\n   * Identificador de actividad económica.\n   */\n  businessID: number;\n\n  /**\n   * Descripción de actividad económica.\n   */\n  businessDescription: string;\n\n  /**\n   * Identificador del departamento de ubicación.\n   */\n  idAdminArea: number;\n\n  /**\n   * Nombre del departamento de ubicación.\n   */\n  nameAdminArea: string;\n\n  /**\n   * Identificador del municipio de ubicación.\n   */\n  idSubAdminArea: number;\n\n  /**\n   * Nombre del municipio de ubicación.\n   */\n  nameSubAdminArea: string;\n\n  /**\n   * Dirección.\n   */\n  address: string;\n\n  /**\n   * Nombres de los campos de las preguntas. Esto concuerda con el nombre que recibe el servicio.\n   */\n  protected readonly FIELD_NAMES = {\n    idType: 'tipoDocEmpresa',\n    idNumber: 'NitEmpresa',\n    businessName: 'RazonSocial',\n    businessID: 'ActividadEconomicaPrincipal',\n    businessDescription: 'DescripcionActivdadEconomicaPrincipal',\n    idAdminArea: 'IDDepartamentoEmpresa',\n    nameAdminArea: 'NombreDepartamentoEmpresa',\n    idSubAdminArea: 'IDMunicipioEmpresa',\n    nameSubAdminArea: 'NombreMunicipioEmpresa',\n    address: 'DireccionEmpresa',\n  };\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    return {\n      [this.FIELD_NAMES.idType]: this.idType,\n      [this.FIELD_NAMES.idNumber]: this.idNumber,\n      [this.FIELD_NAMES.businessName]: this.businessName,\n      [this.FIELD_NAMES.businessID]: this.businessID,\n      [this.FIELD_NAMES.businessDescription]: this.businessDescription,\n      [this.FIELD_NAMES.idAdminArea]: this.idAdminArea,\n      [this.FIELD_NAMES.nameAdminArea]: this.nameAdminArea,\n      [this.FIELD_NAMES.idSubAdminArea]: this.idSubAdminArea,\n      [this.FIELD_NAMES.nameSubAdminArea]: this.nameSubAdminArea,\n      [this.FIELD_NAMES.address]: this.address,\n    };\n  }\n}\n","import { Entity } from './entity';\n\nexport class Proceso extends Entity {\n  get nombre(): string {\n    return this._nombre;\n  }\n\n  set nombre(nombre: string) {\n    this._nombre = nombre;\n  }\n\n  private _nombre: string;\n\n  static parse(json: any[]): Proceso[] {\n    return json.map((item: any) => new Proceso(item));\n  }\n\n  constructor(json: any) {\n    super(json.Id_Proceso);\n    this._nombre = json.Descripcion;\n  }\n}\n","import { Entity } from './entity';\n\nexport class Sede extends Entity {\n  get nombre(): string {\n    return this._nombre;\n  }\n\n  set nombre(nombre: string) {\n    this._nombre = nombre;\n  }\n\n  private _nombre: string;\n\n  static parse(json: any[]): Sede[] {\n    return json.map((item: any) => new Sede(item));\n  }\n\n  constructor(json: any) {\n    super(json.IdSede);\n    this._nombre = json.NombreSede;\n  }\n}\n","import { Entity } from './entity';\n\nexport class TemaAsesoria extends Entity {\n  get nombre(): string {\n    return this._nombre;\n  }\n\n  set nombre(nombre: string) {\n    this._nombre = nombre;\n  }\n\n  get observacion(): string {\n    return this._observacion;\n  }\n\n  set observacion(observacion: string) {\n    this._observacion = observacion;\n  }\n\n  private _nombre: string;\n\n  private _observacion: string;\n\n  static parse(json: any[]) {\n    return json.map((item: any) => new TemaAsesoria(item));\n  }\n\n  constructor(json: any) {\n    super(json.PK_ID_EVTemasAgendamiento);\n    this._nombre = json.strDescripcionTemaEvento;\n    this._observacion = json.strObservacionesTemaEvento;\n  }\n}\n","export class EDInfoAuditoriaAPP {\n  strIdentificacionUsuario: string;\n  strNombreUsuario: string;\n  strNombreEmpresa: string;\n  strTipoDocEmpresa: string;\n  strDocumentoEmpresa: string;\n  strUUID: string;\n  strLatitud: string;\n  strLongitud: string;\n\n  constructor() {\n    this.strIdentificacionUsuario = '';\n    this.strNombreUsuario = '';\n    this.strNombreEmpresa = '';\n    this.strTipoDocEmpresa = '';\n    this.strDocumentoEmpresa = '';\n    this.strUUID = '';\n    this.strLatitud = '';\n    this.strLongitud = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuSSTService {\n  private menuSSTSource = new BehaviorSubject<boolean>(false);\n  private menuPlanEmergencia = new BehaviorSubject<boolean>(false);\n  menuSST = this.menuSSTSource.asObservable();\n  menuPlan = this.menuPlanEmergencia.asObservable();\n\n  constructor() {}\n\n  changeMenuSST(menuSST: boolean) {\n    this.menuSSTSource.next(menuSST);\n  }\n  changeMenuPlan(menuPlan: boolean) {\n    this.menuPlanEmergencia.next(menuPlan);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { AsesoriaSst } from '../entities/asesoria-sst';\nimport { ContextService } from './context.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AsesoriaSstService {\n\n  constructor(\n    private http: HttpClient,\n    private context: ContextService\n  ) { }\n\n  getListaMaestros(): Observable<any> {\n    const url = `${this.context.getEnvUrl().call(null, 'participacion')}/EnVivoServicio/listar-Maestros-EnVivo`;\n    return this.http.get(url);\n  }\n\n  getExpertosTecnicos(idTema: number): Observable<any> {\n    const url = `${this.context.getEnvUrl().call(null, 'participacion')}/EnVivoServicio/listar-ExpertoTecnico?Fk_Id_Tema=${idTema}`;\n    return this.http.get(url);\n  }\n\n  getAgendaDisponible(intFk_Id_Tema, intIDUsuarioExpertoTecnico, strFechaConsulta, strTipoAgenda, strToken): Observable<any> {\n    const url = `${this.context.getEnvUrl().call(null, 'participacion')}/EnVivoServicio/listar-AgendaExpertoTecnicoAPP`;\n    const data = {\n      strTipoAgenda,\n      strFechaConsulta,\n      intIDUsuarioExpertoTecnico,\n      strToken,\n      intFk_Id_Tema\n    };\n\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n\n    return this.http.post(url, data, { headers });\n  }\n\n  agendar(data: any): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'participacion') + '/EnVivoServicio/guardar-CitaUsuaroAPP';\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return this.http.post(url, data, { headers });\n  }\n\n  reagendar(data): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'participacion') + '/EnVivoServicio/reagendar-CitaUsuaroAPP';\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return this.http.post(url, data, { headers });\n  }\n\n  consultar(strFechaInicioBusqueda, strFechaFinalBusqueda, strNumeroDocumentoUsuario, strDocumentoEmpresa, intFk_ID_Tema_Agendamiento): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'participacion') + '/EnVivoServicio/listar-HistorialAgemdamiento';\n    let headers = new HttpHeaders();\n    const data = {\n      strFechaInicioBusqueda,\n      strFechaFinalBusqueda,\n      strNumeroDocumentoUsuario,\n      strDocumentoEmpresa,\n      intFk_ID_Tema_Agendamiento,\n      intNumeroPagina: \"1\",\n      intPageSize: \"10\"\n    };\n\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return this.http.post(url, data, { headers });\n  }\n\n  cancelar(strToken: string, strIP: string): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'participacion') + '/EnVivoServicio/cancelar-cita-APP';\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return this.http.post(url, { strToken, strIP }, { headers });\n  }\n\n  recordarPIN(strToken: string): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'participacion') + '/EnVivoServicio/recordar-PIN-APP';\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return this.http.post(url, { strToken }, { headers });\n  }\n\n  reconfirmar(strToken: string): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'participacion') + '/EnVivoServicio/reconfirmar-cita-APP';\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return this.http.post(url, { strToken }, { headers });\n  }\n\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ContextService } from './context.service';\n\n/**\n * Proveedor de servicios para el módulo de autoevaluación COVID-19.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutoevaluacionCOVID19Service {\n\n  /**\n   * URI del servicio para obtener las preguntas del cuestionario de autoevaluación COVID-19.\n   */\n  private readonly QUESTIONS_URI = '/Covid/preguntas-covid';\n\n  /**\n   * URI del servicio para guardar la autoevaluación COVID-19.\n   */\n  private readonly POLL_URI = '/Covid/guardar-covid-app';\n\n  /**\n   * URI del servicio para obtener correo electrónico y número de teléfono actualizado del usuario.\n   */\n  private readonly UPDATED_DATA_URI = '/Covid/validar-correo-covid-app';\n\n  constructor(\n    private http: HttpClient,\n    private context: ContextService\n  ) { }\n\n  /**\n   * Obtiene las preguntas de la encuesta de autoevaluación COVID-19.\n   */\n  getQuestions(): Observable<any> {\n    const domain = this.context.getEnvUrl().call(null, 'covid');\n    const url = `${domain}${this.QUESTIONS_URI}`;\n\n    return this.http.get(url);\n  }\n\n  /**\n   * Envía la encuesta al servicio para su registro.\n   *\n   * @param poll Parámetros de la encuesta.\n   */\n  submitPoll(poll: any): Observable<any> {\n    const domain = this.context.getEnvUrl().call(null, 'covid');\n    const url = `${domain}${this.POLL_URI}`;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n    const body = new HttpParams({ fromObject: poll });\n\n    return this.http.post(url, body, { headers });\n  }\n\n  /**\n   * Obtiene correo electrónico y número de teléfono actualizado del usuario.\n   *\n   * @param data Datos de usuario.\n   */\n  getUpdatedUserData(data: any): Observable<any> {\n    const domain = this.context.getEnvUrl().call(null, 'covid');\n    const url = `${domain}${this.UPDATED_DATA_URI}`;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n    const body = new HttpParams({ fromObject: data });\n\n    return this.http.post(url, body, { headers });\n  }\n\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ContextService } from './context.service';\n\n/**\n * Proveedor de servicios para el módulo de encuesta de chequeos médicos.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChequeosCOVID19Service {\n\n  /**\n   * URI del servicio para guardar las encuesta de chequeos médicos.\n   */\n  private readonly POLL_URI = '/Covid/guardar-chequeosMedicos-app';\n\n  /**\n   * URI del servicio para verificar última fecha de encuesta de chequeo médico.\n   */\n  private readonly CHECK_POLL_URI = '/Covid/validar-ventana-chequeo-medico';\n\n  constructor(\n    private http: HttpClient,\n    private context: ContextService\n  ) { }\n\n  /**\n   * Envía la encuesta al servicio para su registro.\n   *\n   * @param poll Parámetros de la encuesta.\n   */\n  submitPoll(poll: any): Observable<any> {\n    const domain = this.context.getEnvUrl().call(null, 'covid');\n    const url = `${domain}${this.POLL_URI}`;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n    const body = new HttpParams({ fromObject: poll });\n\n    return this.http.post(url, body, { headers });\n  }\n\n  /**\n   * Comprueba la fecha del último chequeo médico.\n   *\n   * @param data Datos de la petición.\n   */\n  checkPoll(data: any): Observable<any> {\n    const domain = this.context.getEnvUrl().call(null, 'covid');\n    const url = `${domain}${this.CHECK_POLL_URI}`;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n    const body = new HttpParams({ fromObject: data });\n\n    return this.http.post(url, body, { headers });\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ContextService } from './context.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaService {\n\n  constructor(\n    private http: HttpClient,\n    private context: ContextService\n  ) { }\n\n  getSedes(nit: string): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'empresa') + '/Empresa/empresa-sedesnit?NIT=' + nit;\n    return this.http.get(url);\n  }\n\n  getProcesos(nit: string): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'empresa') + '/Empresa/empresa-procesos?NIT=' + nit;\n    return this.http.get(url);\n  }\n\n  getNombreLogo(nit: string): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'empresa') + '/Empresa/Obtener-Logo-Empresa?nitempresa=' + nit;\n    console.log('url: ' + url);\n    return this.http.get(url);\n  }\n\n  getUrlLogo(nombre: string): string {\n    return this.context.getAlisstaWeb() + \"/Logo_Empresa/\" + nombre;\n  }\n}\n"],"sourceRoot":"webpack:///"}