{"version":3,"sources":["webpack:///src/app/pages/covid19-encuesta/covid19-encuesta.page.html","webpack:///src/app/pages/covid19-encuesta/covid19-encuesta-routing.module.ts","webpack:///src/app/pages/covid19-encuesta/covid19-encuesta.module.ts","webpack:///src/app/pages/covid19-encuesta/covid19-encuesta.page.scss","webpack:///src/app/pages/covid19-encuesta/covid19-encuesta.page.ts"],"names":["routes","path","component","Covid19EncuestaPageRoutingModule","imports","forChild","exports","Covid19EncuestaPageModule","declarations","Covid19EncuestaPage","autoevaluacionCOVID19Service","utils","alertCtrl","router","QUESTIONS_OPTIONS_MAP","label","value","poll","getCurrentNavigation","extras","state","getQuestions","submitted","formGroup","invalid","content","scrollToTop","Object","keys","controls","forEach","k","control","question","questions","find","q","name","answer","navigate","fieldName","secondQuestionName","getFieldNameByQuestionID","thirdQuestionName","setTimeout","updateValueAndValidity","action","presentLoading","pipe","dismissLoading","subscribe","response","body","opciones","PK_ID_AutoEvaluacionCovidPreguntas","push","initForm","id","c","required","addControl","isTemperatureRequired","min","max","formGroupReady","validator","secondQuestionValue","undefined","selector","template"],"mappings":"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","file":"covid19-encuesta-covid19-encuesta-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <app-nav-bar></app-nav-bar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <!-- Título de la vista -->\\n  <app-title-bar [title]=\\\"'AUTOEVALUACIÓN SÍNTOMAS COVID-19'\\\" [iconName]=\\\"'assets/icon/nurse.svg'\\\"></app-title-bar>\\n\\n  <p class=\\\"message\\\">Por favor, contesta las siguientes preguntas con relación a tu estado de salud el día de hoy</p>\\n\\n  <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"save()\\\" *ngIf=\\\"formGroupReady\\\">\\n\\n    <!-- Sección de preguntas -->\\n    <ion-list lines=\\\"none\\\">\\n      <ion-item class=\\\"mb-5 question-wrapper ion-no-padding\\\" *ngFor=\\\"let q of poll.questions; let i = index\\\">\\n        <ion-grid>\\n          <ion-row>\\n\\n            <!-- Número de la pregunta -->\\n            <ion-col size=\\\"2\\\">\\n              <h3 class=\\\"number\\\">{{ i + 1 }}</h3>\\n            </ion-col>\\n\\n            <ion-col size=\\\"10\\\">\\n\\n              <!-- Pregunta -->\\n              <div class=\\\"question\\\">{{ q.description }}</div>\\n\\n              <!-- Opciones -->\\n              <ng-container\\n                *ngTemplateOutlet=\\\"optionsTemplate; context: { options: q.options, name: q.name, formGroup: formGroup }\\\">\\n              </ng-container>\\n\\n              <div class=\\\"validation-errors\\\" *ngIf=\\\"submitted || formGroup.controls[q.name].dirty\\\">\\n                <ng-container *ngIf=\\\"formGroup.controls[q.name].errors?.required\\\">\\n                  Este campo es requerido.\\n                </ng-container>\\n                <ng-container *ngIf=\\\"formGroup.controls[q.name].errors?.min\\\">\\n                  El valor no puede ser menor que 35.\\n                </ng-container>\\n                <ng-container *ngIf=\\\"formGroup.controls[q.name].errors?.max\\\">\\n                  El valor no puede ser mayor que 42.\\n                </ng-container>\\n              </div>\\n\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n    </ion-list>\\n\\n    <!-- Botones de acción -->\\n    <div class=\\\"buttons-wrapper text-center\\\">\\n      <div class=\\\"text-center w-100\\\">\\n        <ion-button type=\\\"submit\\\">Guardar</ion-button>\\n      </div>\\n    </div>\\n\\n  </form>\\n\\n</ion-content>\\n\\n<!-- Plantilla de opciones -->\\n<ng-template #optionsTemplate let-options=\\\"options\\\" let-name=\\\"name\\\" let-formGroup=\\\"formGroup\\\">\\n  <ng-container [formGroup]=\\\"formGroup\\\">\\n\\n    <!-- Opciones de selección -->\\n    <ion-list class=\\\"options\\\" lines=\\\"none\\\" *ngIf=\\\"options\\\">\\n      <ion-radio-group [formControlName]=\\\"name\\\" (ngModelChange)=\\\"onValueChange(name, $event)\\\">\\n        <ion-item class=\\\"radio\\\" *ngFor=\\\"let option of options\\\">\\n          <ion-label>{{ option.label }}</ion-label>\\n          <ion-radio [value]=\\\"option.value\\\" (click)=\\\"updateTemperatureValidators(name)\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-list>\\n\\n    <!-- Opción para el caso de grados de temperatura, pregunta número tres -->\\n    <ion-list class=\\\"options\\\" *ngIf=\\\"!options\\\">\\n      <ion-item class=\\\"input\\\">\\n        <ion-label>Resultado (°C)</ion-label>\\n        <ion-input type=\\\"number\\\" [formControlName]=\\\"name\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n\\n  </ng-container>\\n</ng-template>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Covid19EncuestaPage } from './covid19-encuesta.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Covid19EncuestaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Covid19EncuestaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared.module';\nimport { Covid19EncuestaPageRoutingModule } from './covid19-encuesta-routing.module';\nimport { Covid19EncuestaPage } from './covid19-encuesta.page';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    Covid19EncuestaPageRoutingModule\n  ],\n  declarations: [Covid19EncuestaPage]\n})\nexport class Covid19EncuestaPageModule {}\n","export default \"ion-content .message {\\n  padding: 8px 16px;\\n  background-color: #ff7500;\\n  color: #ffffff;\\n}\\nion-content ion-list {\\n  padding: 0 5px;\\n}\\nion-content ion-list.options {\\n  padding: 0 !important;\\n  margin: 0 !important;\\n}\\nion-content ion-list.options ion-item {\\n  border: 0 !important;\\n  padding: 0 !important;\\n  background-color: transparent;\\n}\\nion-content ion-list.options ion-item.radio {\\n  min-height: auto;\\n}\\nion-content ion-list.options ion-item.input {\\n  --highlight-background: none;\\n}\\nion-content ion-list ion-item {\\n  border: 2px solid #c0c0c0 !important;\\n}\\nion-content ion-list ion-item.question-wrapper {\\n  --inner-padding-end: 0;\\n}\\nion-content ion-list ion-item.question-wrapper:nth-child(even) {\\n  --background: #e3e9ec;\\n}\\nion-content ion-list ion-item.question-wrapper:nth-child(even) .options ion-item {\\n  --background: #e3e9ec;\\n}\\nion-content ion-list ion-item ion-grid .number {\\n  font-size: 2.5rem;\\n  position: absolute;\\n  top: 40%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n}\\nion-content ion-list ion-item ion-grid .question {\\n  white-space: break-spaces;\\n}\\nion-content ion-list ion-item ion-grid .validation-errors {\\n  color: red;\\n}\\nion-content ion-list ion-item ion-input {\\n  border: 2px solid #c0c0c0 !important;\\n  margin-left: 5px;\\n  max-width: 50px;\\n}\\nion-content ion-list ion-item ion-input input {\\n  margin: 2px;\\n}\\nion-content .buttons-wrapper {\\n  margin-bottom: 16px;\\n}\\nion-content .buttons-wrapper button {\\n  padding: 25px 35px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY292aWQxOS1lbmN1ZXN0YS9jb3ZpZDE5LWVuY3Vlc3RhLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLGlCQUFBO0VBQ0EseUJBQUE7RUFDQSxjQUFBO0FBQUo7QUFHRTtFQUNFLGNBQUE7QUFESjtBQUdJO0VBQ0UscUJBQUE7RUFDQSxvQkFBQTtBQUROO0FBR007RUFDRSxvQkFBQTtFQUNBLHFCQUFBO0VBQ0EsNkJBQUE7QUFEUjtBQUdRO0VBQ0UsZ0JBQUE7QUFEVjtBQUlRO0VBQ0UsNEJBQUE7QUFGVjtBQU9JO0VBQ0Usb0NBQUE7QUFMTjtBQU9NO0VBQ0Usc0JBQUE7QUFMUjtBQU9RO0VBQ0UscUJBQUE7QUFMVjtBQVFZO0VBQ0UscUJBQUE7QUFOZDtBQWFRO0VBQ0UsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0VBRUEsZ0NBQUE7QUFYVjtBQWNRO0VBQ0UseUJBQUE7QUFaVjtBQWVRO0VBQ0UsVUFBQTtBQWJWO0FBaUJNO0VBQ0Usb0NBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7QUFmUjtBQWlCUTtFQUNFLFdBQUE7QUFmVjtBQXFCRTtFQUNFLG1CQUFBO0FBbkJKO0FBcUJJO0VBQ0UsNkJBQUE7QUFuQk4iLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9jb3ZpZDE5LWVuY3Vlc3RhL2NvdmlkMTktZW5jdWVzdGEucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuICAmIC5tZXNzYWdlIHtcbiAgICBwYWRkaW5nOiA4cHggMTZweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY3NTAwO1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICB9XG5cbiAgJiBpb24tbGlzdCB7XG4gICAgcGFkZGluZzogMCA1cHg7XG5cbiAgICAmLm9wdGlvbnMge1xuICAgICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICAgICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG5cbiAgICAgICYgaW9uLWl0ZW0ge1xuICAgICAgICBib3JkZXI6IDAgIWltcG9ydGFudDtcbiAgICAgICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcblxuICAgICAgICAmLnJhZGlvIHtcbiAgICAgICAgICBtaW4taGVpZ2h0OiBhdXRvO1xuICAgICAgICB9XG5cbiAgICAgICAgJi5pbnB1dCB7XG4gICAgICAgICAgLS1oaWdobGlnaHQtYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgICYgaW9uLWl0ZW0ge1xuICAgICAgYm9yZGVyOiAycHggc29saWQgI2MwYzBjMCAhaW1wb3J0YW50O1xuXG4gICAgICAmLnF1ZXN0aW9uLXdyYXBwZXIge1xuICAgICAgICAtLWlubmVyLXBhZGRpbmctZW5kOiAwO1xuXG4gICAgICAgICY6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICAgICAgICAtLWJhY2tncm91bmQ6ICNlM2U5ZWM7XG5cbiAgICAgICAgICAmIC5vcHRpb25zIHtcbiAgICAgICAgICAgICYgaW9uLWl0ZW0ge1xuICAgICAgICAgICAgICAtLWJhY2tncm91bmQ6ICNlM2U5ZWM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICYgaW9uLWdyaWQge1xuICAgICAgICAmIC5udW1iZXIge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6IDQwJTtcbiAgICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICB9XG5cbiAgICAgICAgJiAucXVlc3Rpb24ge1xuICAgICAgICAgIHdoaXRlLXNwYWNlOiBicmVhay1zcGFjZXM7XG4gICAgICAgIH1cblxuICAgICAgICAmIC52YWxpZGF0aW9uLWVycm9ycyB7XG4gICAgICAgICAgY29sb3I6IHJlZDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmIGlvbi1pbnB1dCB7XG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNjMGMwYzAgIWltcG9ydGFudDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgICAgICAgbWF4LXdpZHRoOiA1MHB4O1xuXG4gICAgICAgICYgaW5wdXQge1xuICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJiAuYnV0dG9ucy13cmFwcGVyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuXG4gICAgJiBidXR0b24ge1xuICAgICAgcGFkZGluZzogMjVweCAzNXB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuICB9XG59XG4iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController, IonContent } from '@ionic/angular';\nimport { finalize } from 'rxjs/operators';\nimport { alertCommunicationError } from 'src/app/commons/user-feedback';\nimport { Poll, Question } from 'src/app/entities/autoevaluacion-covid19';\nimport { AutoevaluacionCOVID19Service } from 'src/app/services/autoevaluacion-covid19.service';\nimport { UtilsService } from 'src/app/services/utils.service';\n\n/**\n * Componente para la vista de encuesta de autoevaluación COVID-19.\n */\n@Component({\n  selector: 'app-covid19-encuesta',\n  templateUrl: './covid19-encuesta.page.html',\n  styleUrls: ['./covid19-encuesta.page.scss'],\n})\nexport class Covid19EncuestaPage implements OnInit {\n\n  /**\n   * Referencia del elemento _content_ del marcado _HTML_.\n   */\n  @ViewChild(IonContent, { static: true })\n  content: IonContent;\n\n  /**\n   * Formulario.\n   */\n  formGroup: FormGroup;\n\n  /**\n   * Indica si el formulario ha terminado de construirse.\n   */\n  formGroupReady: boolean;\n\n  /**\n   * Indica si el formulario ha sido confirmado por el usuario.\n   */\n  submitted: boolean;\n\n  /**\n   * Cuestionario para la autoevaluación COVID-19.\n   */\n  poll: Poll;\n\n  /**\n   * Opciones de respuesta disponibles para cada pregunta de la encuesta.\n   */\n  readonly QUESTIONS_OPTIONS_MAP = {\n    1: [\n      { label: 'Sí', value: 'SI' },\n      { label: 'No', value: 'NO' },\n      { label: 'No estoy segur@', value: 'NO Estoy Seguro' }\n    ],\n    2: [\n      { label: 'Sí', value: 'SI' },\n      { label: 'No', value: 'NO' },\n      { label: 'No estoy segur@', value: 'NO Tengo Termómetro' }\n    ],\n    4: [\n      { label: 'Sin tos seca', value: 'Sin tos seca' },\n      { label: 'Poca tos', value: 'Poca tos' },\n      { label: 'Tos persistente', value: 'Tos Persistente' }\n    ],\n    5: [\n      { label: 'Sí', value: 'SI' },\n      { label: 'No', value: 'NO' },\n      { label: 'No estoy segur@', value: 'NO Estoy Seguro' }\n    ],\n    6: [\n      { label: 'Sí', value: 'SI' },\n      { label: 'No', value: 'NO' },\n      { label: 'No estoy segur@', value: 'NO Estoy Seguro' }\n    ],\n    7: [\n      { label: 'Sin dolor', value: 'Sin dolor' },\n      { label: 'Poco dolor', value: 'Poco dolor' },\n      { label: 'Fuerte dolor', value: 'Fuerte dolor' }\n    ],\n    8: [\n      { label: 'Sin dolor', value: 'Sin dolor' },\n      { label: 'Poco dolor', value: 'Poco dolor' },\n      { label: 'Fuerte dolor', value: 'Fuerte dolor' }\n    ],\n    9: [\n      { label: 'Sí', value: 'SI' },\n      { label: 'No', value: 'NO' },\n      { label: 'No estoy segur@', value: 'NO Estoy Seguro' }\n    ],\n    10: [\n      { label: 'Ninguna molestia', value: 'Ninguna Molestia' },\n      { label: 'Poca molestia', value: 'Poca Molestia' },\n      { label: 'Fuerte molestia', value: 'Fuerte Molestia' }\n    ],\n    11: [\n      { label: 'Sí', value: 'SI' },\n      { label: 'No', value: 'NO' },\n      { label: 'No estoy segur@', value: 'NO Estoy Seguro' }\n    ],\n    12: [\n      { label: 'Sin dolor', value: 'Sin dolor' },\n      { label: 'Poco dolor', value: 'Poco dolor' },\n      { label: 'Fuerte dolor', value: 'Fuerte dolor' }\n    ],\n    13: [\n      { label: 'Sí', value: 'SI' },\n      { label: 'No', value: 'NO' },\n      { label: 'No estoy segur@', value: 'NO Estoy Seguro' }\n    ],\n    14: [\n      { label: 'Sí', value: 'SI' },\n      { label: 'No', value: 'NO' },\n      { label: 'No estoy segur@', value: 'NO Estoy Seguro' }\n    ],\n    15: [\n      { label: 'Sí', value: 'SI' },\n      { label: 'No', value: 'NO' },\n      { label: 'No estoy segur@', value: 'NO Estoy Seguro' }\n    ]\n  };\n\n  constructor(\n    private autoevaluacionCOVID19Service: AutoevaluacionCOVID19Service,\n    private utils: UtilsService,\n    private alertCtrl: AlertController,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.poll = this.router.getCurrentNavigation().extras.state.poll;\n    this.getQuestions();\n  }\n\n  /**\n   * Guarda las respuestas de la encuesta y redirige a la vista de resultados.\n   */\n  save(): void {\n    this.submitted = true;\n\n    if (this.formGroup.invalid) {\n      this.content.scrollToTop(1000);\n\n      return;\n    }\n\n    Object.keys(this.formGroup.controls).forEach(k => {\n      const control = this.formGroup.controls[k];\n      const question = this.poll.questions.find(q => q.name === k);\n      question.answer = control.value;\n    });\n\n    this.router.navigate(['/health-conditions/covid19-results'], { state: { poll: this.poll } });\n  }\n\n  /**\n   * Actualiza los validadores del campo de temperatura.\n   *\n   * @param fieldName Nombre del campo que hace la llamada.\n   */\n  updateTemperatureValidators(fieldName: string): void {\n    const secondQuestionName = this.getFieldNameByQuestionID(2);\n\n    if (fieldName !== secondQuestionName) {\n      return;\n    }\n\n    const thirdQuestionName = this.getFieldNameByQuestionID(3);\n    setTimeout(() => this.formGroup.controls[thirdQuestionName].updateValueAndValidity(), 500);\n  }\n\n  /**\n   * Captura el evento de cambio de valor en alguna de las opciones de selección.\n   *\n   * @param value Valor.\n   */\n  onValueChange(name: string, value: any): void {\n    const secondQuestionName = this.getFieldNameByQuestionID(2);\n\n    if (name !== secondQuestionName) {\n      return;\n    }\n\n    const action = value === 'SI' ? 'enable' : 'disable';\n    const thirdQuestionName = this.getFieldNameByQuestionID(3);\n    this.formGroup.controls[thirdQuestionName][action]();\n  }\n\n  /**\n   * Obtiene las preguntas de la encuesta.\n   */\n  private async getQuestions(): Promise<void> {\n    await this.utils.presentLoading();\n\n    this.autoevaluacionCOVID19Service.getQuestions()\n      .pipe(finalize(() => this.utils.dismissLoading()))\n      .subscribe(\n        response => {\n          const body = response;\n          const questions: Question[] = [];\n\n          body.forEach((q: any) => {\n            q.opciones = this.QUESTIONS_OPTIONS_MAP[q.PK_ID_AutoEvaluacionCovidPreguntas];\n            const question = new Question(q);\n            questions.push(question);\n          });\n\n          this.poll.questions = questions;\n          this.initForm();\n        },\n        () => {\n          alertCommunicationError(this.alertCtrl);\n          this.router.navigate(['/home']);\n        }\n      );\n  }\n\n  /**\n   * Inicializa el formulario.\n   */\n  private initForm(): void {\n    this.formGroup = new FormGroup({});\n\n    this.poll.questions.forEach(q => {\n      if (q.id === 3) {\n        // El tratamiento de la pregunta número tres es ad-hoc y se hace por separado\n        return;\n      }\n\n      const c = new FormControl('', [Validators.required]);\n      this.formGroup.addControl(q.name, c);\n    });\n\n    const control = new FormControl(\n      '',\n      [\n        this.isTemperatureRequired(this.formGroup),\n        Validators.min(35),\n        Validators.max(42)\n      ]\n    );\n\n    const thirdQuestionName = this.getFieldNameByQuestionID(3);\n    this.formGroup.addControl(thirdQuestionName, control);\n    this.formGroupReady = true;\n  }\n\n  /**\n   * Evalúa si la respuesta de temperatura es válida o no.\n   *\n   * Si el usuario ha indicado que se ha medido la temperatura con un termómetro, el campo para indicar\n   * los grados de temperatura es requerido. En caso contrario, está deshabilitado.\n   *\n   * @param formGroup Formulario.\n   */\n  private isTemperatureRequired(formGroup: FormGroup): ValidatorFn {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      const secondQuestionName = 'PreguntaDos';\n      const secondQuestionValue = 'SI';\n\n      if (formGroup.controls[secondQuestionName].value === secondQuestionValue) {\n        if (!control.value) {\n          return { required: true };\n        }\n      }\n\n      return null;\n    };\n\n    return validator;\n  }\n\n  /**\n   * Obtiene el nombre del campo de la pregunta definida por el identificador proporcionado.\n   *\n   * @param id Identificador de la pregunta.\n   */\n  private getFieldNameByQuestionID(id: number): string {\n    const question = this.poll.questions.find(q => q.id === id);\n\n    return question ? question.name : undefined;\n  }\n\n}\n"]}