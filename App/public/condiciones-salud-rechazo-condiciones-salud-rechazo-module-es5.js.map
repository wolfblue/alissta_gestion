{"version":3,"sources":["webpack:///src/app/pages/condiciones-salud-rechazo/condiciones-salud-rechazo.page.html","webpack:///src/app/pages/condiciones-salud-rechazo/condiciones-salud-rechazo-routing.module.ts","webpack:///src/app/pages/condiciones-salud-rechazo/condiciones-salud-rechazo.module.ts","webpack:///src/app/pages/condiciones-salud-rechazo/condiciones-salud-rechazo.page.scss","webpack:///src/app/pages/condiciones-salud-rechazo/condiciones-salud-rechazo.page.ts"],"names":["routes","path","component","CondicionesSaludRechazoPageRoutingModule","imports","forChild","exports","CondicionesSaludRechazoPageModule","declarations","CondicionesSaludRechazoPage","utils","autoevaluacionService","geolocation","nativeGeocoder","alertCtrl","chequeoService","router","poll","getCurrentNavigation","extras","state","getIPAddress","navigate","presentLoading","pipe","dismissLoading","subscribe","r","body","ip","query","userData","getCurrentPosition","onFinally","latitude","longitude","getAddress","then","coords","address","sendPoll","reverseGeocode","thoroughfare","subThoroughfare","administrativeArea","subAdministrativeArea","deserialize","submitFn","submitPoll","provider","call","selector","template"],"mappings":"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","file":"condiciones-salud-rechazo-condiciones-salud-rechazo-module-es5.js","sourcesContent":["export default \"<ion-content class=\\\"ion-padding\\\">\\n\\n  <!-- Logo de Alissta -->\\n  <div class=\\\"clearfix\\\">\\n    <ion-img class=\\\"logo place-right\\\" [src]=\\\"'assets/img/alissta_logo.svg'\\\"></ion-img>\\n  </div>\\n\\n  <!-- Texto de política rechazada -->\\n  <div class=\\\"message\\\">\\n    <p class=\\\"text-center\\\">Señor trabajador</p>\\n    <p>\\n      Esperamos contar en una próxima oportunidad con su participación en la prevención del riesgo\\n      de contagio por COVID-19.\\n    </p>\\n    <p>Es muy importante conocer su estado de salud.</p>\\n  </div>\\n\\n  <div class=\\\"error\\\" *ngIf=\\\"showError\\\">\\n    <p class=\\\"text-center\\\">Servicio temporalmente no disponible. Intente más tarde.</p>\\n  </div>\\n\\n  <!-- Botones de acción -->\\n  <ion-item class=\\\"action-buttons\\\" lines=\\\"none\\\">\\n    <div class=\\\"text-center w-100\\\">\\n      <ion-button size=\\\"default\\\" color=\\\"secondary\\\" (click)=\\\"goToHome()\\\">Volver al inicio</ion-button>\\n    </div>\\n  </ion-item>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CondicionesSaludRechazoPage } from './condiciones-salud-rechazo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CondicionesSaludRechazoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CondicionesSaludRechazoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared.module';\nimport { CondicionesSaludRechazoPageRoutingModule } from './condiciones-salud-rechazo-routing.module';\nimport { CondicionesSaludRechazoPage } from './condiciones-salud-rechazo.page';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CondicionesSaludRechazoPageRoutingModule\n  ],\n  declarations: [CondicionesSaludRechazoPage]\n})\nexport class CondicionesSaludRechazoPageModule {}\n","export default \"ion-content {\\n  background-color: #eeeeee !important;\\n  --padding-top: calc(var(--ion-padding, 16px) + env(safe-area-inset-top));\\n}\\nion-content .logo {\\n  width: 200px;\\n  height: 80px;\\n}\\nion-content .message, ion-content .error {\\n  margin-top: 50px;\\n}\\nion-content .message p, ion-content .error p {\\n  margin: initial;\\n  font-size: inherit !important;\\n  margin-bottom: 1em;\\n}\\nion-content .error {\\n  color: red;\\n}\\nion-content .action-buttons {\\n  background-color: transparent;\\n}\\nion-content .action-buttons ion-button {\\n  margin: auto 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY29uZGljaW9uZXMtc2FsdWQtcmVjaGF6by9jb25kaWNpb25lcy1zYWx1ZC1yZWNoYXpvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9DQUFBO0VBQ0Esd0VBQUE7QUFDRjtBQUNFO0VBQ0UsWUFBQTtFQUNBLFlBQUE7QUFDSjtBQUVFO0VBRUUsZ0JBQUE7QUFESjtBQUdJO0VBQ0UsZUFBQTtFQUNBLDZCQUFBO0VBQ0Esa0JBQUE7QUFETjtBQUtFO0VBQ0UsVUFBQTtBQUhKO0FBTUU7RUFDRSw2QkFBQTtBQUpKO0FBTUk7RUFDRSxjQUFBO0FBSk4iLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9jb25kaWNpb25lcy1zYWx1ZC1yZWNoYXpvL2NvbmRpY2lvbmVzLXNhbHVkLXJlY2hhem8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVlICFpbXBvcnRhbnQ7XG4gIC0tcGFkZGluZy10b3A6IGNhbGModmFyKC0taW9uLXBhZGRpbmcsIDE2cHgpICsgZW52KHNhZmUtYXJlYS1pbnNldC10b3ApKTtcblxuICAmIC5sb2dvIHtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgaGVpZ2h0OiA4MHB4O1xuICB9XG5cbiAgJiAubWVzc2FnZSxcbiAgJiAuZXJyb3Ige1xuICAgIG1hcmdpbi10b3A6IDUwcHg7XG5cbiAgICAmIHAge1xuICAgICAgbWFyZ2luOiBpbml0aWFsO1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0ICFpbXBvcnRhbnQ7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgfVxuICB9XG5cbiAgJiAuZXJyb3Ige1xuICAgIGNvbG9yOiByZWQ7XG4gIH1cblxuICAmIC5hY3Rpb24tYnV0dG9ucyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cbiAgICAmIGlvbi1idXR0b24ge1xuICAgICAgbWFyZ2luOiBhdXRvIDA7XG4gICAgfVxuICB9XG59XG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Poll as AutoevaluacionPoll } from 'src/app/entities/autoevaluacion-covid19';\nimport { Poll as ChequeoPoll } from 'src/app/entities/chequeo-covid19';\nimport { UtilsService } from 'src/app/services/utils.service';\nimport { AutoevaluacionCOVID19Service } from 'src/app/services/autoevaluacion-covid19.service';\nimport { Geolocation as GeolocationService } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder } from '@ionic-native/native-geocoder/ngx';\nimport { AlertController } from '@ionic/angular';\nimport { ChequeosCOVID19Service } from 'src/app/services/chequeo-covid19.service';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\nimport { Geolocation } from 'src/app/entities/condiciones-salud';\nimport { alertCommunicationError } from 'src/app/commons/user-feedback';\n\n/**\n * Componente de la vista de rechazo a las políticas de tratamiento de datos personales.\n */\n@Component({\n  selector: 'app-condiciones-salud-rechazo',\n  templateUrl: './condiciones-salud-rechazo.page.html',\n  styleUrls: ['./condiciones-salud-rechazo.page.scss'],\n})\nexport class CondicionesSaludRechazoPage implements OnInit {\n\n  /**\n   * Encuesta.\n   */\n  poll: AutoevaluacionPoll | ChequeoPoll;\n\n  /**\n   * Indica si debe mostrarse un mensaje de error de conexión con el servicio.\n   */\n  showError: boolean;\n\n  constructor(\n    private utils: UtilsService,\n    private autoevaluacionService: AutoevaluacionCOVID19Service,\n    private geolocation: GeolocationService,\n    private nativeGeocoder: NativeGeocoder,\n    private alertCtrl: AlertController,\n    private chequeoService: ChequeosCOVID19Service,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.poll = this.router.getCurrentNavigation().extras.state.poll;\n    this.getIPAddress();\n  }\n\n  /**\n   * Redirige a la vista de inicio de la aplicación.\n   */\n  goToHome(): void {\n    this.router.navigate(['/home']);\n  }\n\n  /**\n   * Obtiene la dirección _IP_ pública desde la cual se realizan las peticiones.\n   */\n  private async getIPAddress(): Promise<void> {\n    await this.utils.presentLoading();\n\n    this.utils.getIPAddress()\n      .pipe(finalize(() => this.utils.dismissLoading()))\n      .subscribe(\n        r => {\n          const body = r;\n          const ip = body.query;\n          this.poll.userData.ip = ip;\n          this.getCurrentPosition();\n        },\n        () => this.getCurrentPosition()\n      );\n  }\n\n  /**\n   * Obtiene las coordenadas de ubicación física del dispositivo.\n   *\n   * @param poll Encuesta.\n   */\n  private async getCurrentPosition(): Promise<void> {\n    const onFinally = (latitude?: string, longitude?: string): void => {\n      this.utils.dismissLoading();\n      const geolocation = new Geolocation();\n      geolocation.latitude = latitude;\n      geolocation.longitude = longitude;\n      this.poll.geolocation = geolocation;\n      this.getAddress();\n    };\n\n    await this.utils.presentLoading();\n\n    this.geolocation.getCurrentPosition()\n      .then(r => onFinally(`${r.coords.latitude}`, `${r.coords.longitude}`))\n      .catch(() => onFinally());\n  }\n\n  /**\n   * Obtiene la dirección descriptiva a partir de las coordenadas obtenidas del dispositivo.\n   *\n   * @param poll Encuesta.\n   */\n  private async getAddress(): Promise<void> {\n    const onFinally = (address?: string): void => {\n      this.utils.dismissLoading();\n      this.poll.geolocation.address = address;\n      this.sendPoll();\n    };\n\n    const latitude = this.poll.geolocation.latitude;\n    const longitude = this.poll.geolocation.longitude;\n\n    if (!latitude || !longitude) {\n      return this.sendPoll();\n    }\n\n    await this.utils.presentLoading();\n\n    this.nativeGeocoder.reverseGeocode(+latitude, +longitude)\n      .then(r => {\n        // Calle o carrera\n        let address = !!r[0].thoroughfare ? r[0].thoroughfare : '';\n\n        // Número\n        address = !!r[0].subThoroughfare ?\n          address !== '' ? `${address} #${r[0].subThoroughfare}` : `#${r[0].subThoroughfare}`\n          : address;\n\n        // Ciudad\n        address = !!r[0].administrativeArea ?\n          address !== '' ? `${address}, ${r[0].subAdministrativeArea}` : `${r[0].subAdministrativeArea}`\n          : address;\n\n        // Departamento\n        address = !!r[0].administrativeArea ?\n          address !== '' ? `${address}, ${r[0].administrativeArea}` : `${r[0].administrativeArea}`\n          : address;\n\n        onFinally(address);\n      })\n      .catch(() => onFinally());\n  }\n\n  /**\n   * Envía la encuesta para su registro.\n   *\n   * @param poll Encuesta.\n   */\n  private async sendPoll(): Promise<void> {\n    const body = this.poll.deserialize();\n    let submitFn: any;\n    let provider: any;\n\n    if (this.poll instanceof ChequeoPoll) {\n      submitFn = this.chequeoService.submitPoll;\n      provider = this.chequeoService;\n    } else {\n      submitFn = this.autoevaluacionService.submitPoll;\n      provider = this.autoevaluacionService;\n    }\n\n    await this.utils.presentLoading();\n\n    submitFn.call(provider, body)\n      .pipe(finalize(() => this.utils.dismissLoading()))\n      .subscribe(\n        () => { },\n        () => {\n          alertCommunicationError(this.alertCtrl);\n          this.router.navigate(['/home']);\n        }\n      );\n  }\n\n}\n"]}