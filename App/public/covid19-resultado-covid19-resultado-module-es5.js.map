{"version":3,"sources":["webpack:///src/app/pages/covid19-resultado/covid19-resultado.page.html","webpack:///src/app/pages/covid19-resultado/covid19-resultado-routing.module.ts","webpack:///src/app/pages/covid19-resultado/covid19-resultado.module.ts","webpack:///src/app/pages/covid19-resultado/covid19-resultado.page.scss","webpack:///src/app/pages/covid19-resultado/covid19-resultado.page.ts"],"names":["routes","path","component","Covid19ResultadoPageRoutingModule","imports","forChild","exports","Covid19ResultadoPageModule","declarations","Covid19ResultadoPage","utils","provider","geolocation","nativeGeocoder","alertCtrl","router","poll","getCurrentNavigation","extras","state","getIPAddress","navigate","presentLoading","pipe","dismissLoading","subscribe","r","body","ip","userData","getCurrentPosition","onFinally","latitude","longitude","getAddress","then","coords","address","sendPoll","reverseGeocode","thoroughfare","subThoroughfare","administrativeArea","subAdministrativeArea","deserialize","submitPoll","b","showSuggestion","esSospechoso","pollDate","fechaStr","showResult","selector","template"],"mappings":"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","file":"covid19-resultado-covid19-resultado-module-es5.js","sourcesContent":["export default \"<ion-content class=\\\"ion-padding\\\">\\n\\n  <!-- Logo de Alissta -->\\n  <div class=\\\"clearfix\\\">\\n    <ion-img class=\\\"logo place-right\\\" [src]=\\\"'assets/img/alissta_logo.svg'\\\"></ion-img>\\n  </div>\\n\\n  <div class=\\\"result\\\" *ngIf=\\\"showResult\\\">\\n    <p class=\\\"text-center\\\">¡Reporte de autoevaluación exitoso!</p>\\n    <p>Los síntomas informados a tu empleador o contratante se guardaron correctamente.</p>\\n    <p class=\\\"suggestion\\\" *ngIf=\\\"showSuggestion\\\">Conforme a los resultados de tu\\n      AUTOEVALUACIÓN, quédate en casa y contacta a tu empleador o contratante.\\n    </p>\\n    <p class=\\\"text-center\\\">{{ pollDate }}</p>\\n  </div>\\n\\n  <div class=\\\"error\\\" *ngIf=\\\"showError\\\">\\n    <p class=\\\"text-center\\\">Servicio temporalmente no disponible. Intente más tarde.</p>\\n  </div>\\n\\n  <div>\\n    <ion-card>\\n      <ion-card-header class=\\\"text-center\\\">\\n        Referencias\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p class=\\\"justificar\\\">\\n          Enlaces de interés y referencias sobre recomendaciones para la prevención COVID-19\\n        </p>\\n        <ul class=\\\"unstyled-list\\\">\\n          <li><a href=\\\"https://covid19.minsalud.gov.co/\\\">Ministerio de Salud y Protección Social</a></li>\\n          <li><a href=\\\"https://www.ins.gov.co/Noticias/Paginas/Coronavirus.aspx\\\">Instituto Nacional de Salud</a></li>\\n          <li><a href=\\\"https://www.paho.org/col/index.php?option=com_docman&view=download&category_slug=publicaciones-ops-oms-colombia&alias=856-mopece4&Itemid=688\\\">Organización Panamericana de la Salud / Organización Mundial de la Salud</a></li>\\n        </ul>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n\\n  <!-- Botones de acción -->\\n  <div class=\\\"text-center\\\">\\n    <ion-button color=\\\"primary\\\" (click)=\\\"goToHome()\\\">Finalizar</ion-button>\\n  </div>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Covid19ResultadoPage } from './covid19-resultado.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Covid19ResultadoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Covid19ResultadoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared.module';\nimport { Covid19ResultadoPageRoutingModule } from './covid19-resultado-routing.module';\nimport { Covid19ResultadoPage } from './covid19-resultado.page';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    Covid19ResultadoPageRoutingModule\n  ],\n  declarations: [Covid19ResultadoPage]\n})\nexport class Covid19ResultadoPageModule {}\n","export default \"ion-content {\\n  background-color: #eeeeee !important;\\n  --padding-top: calc(var(--ion-padding, 16px) + env(safe-area-inset-top));\\n}\\nion-content .logo {\\n  width: 200px;\\n  height: 80px;\\n}\\nion-content .result, ion-content .error {\\n  margin-top: 50px;\\n}\\nion-content .result p, ion-content .error p {\\n  margin: initial;\\n  font-size: inherit !important;\\n  margin-bottom: 1em;\\n}\\nion-content .result p.suggestion, ion-content .error p.suggestion {\\n  color: #ff7500;\\n}\\nion-content .result p:not(.text-center), ion-content .error p:not(.text-center) {\\n  text-align: justify;\\n}\\nion-content .error {\\n  color: red;\\n}\\nion-content ion-card {\\n  margin: 20px 0 !important;\\n  width: 100% !important;\\n  background: transparent !important;\\n  box-shadow: none !important;\\n}\\nion-content ion-card-header {\\n  padding-left: 0px !important;\\n  padding-right: 0px !important;\\n}\\nion-content ion-card-content {\\n  padding-left: 0px !important;\\n  padding-right: 0px !important;\\n}\\nion-content .justificar {\\n  text-align: justify;\\n}\\nion-content .unstyled-list {\\n  list-style: none;\\n  padding-left: 0px;\\n}\\nion-content .unstyled-list li {\\n  margin-bottom: 10px;\\n}\\nion-content button {\\n  padding: 25px 35px !important;\\n}\\nion-content .green {\\n  background-color: #00b050;\\n  color: #eeeeee;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY292aWQxOS1yZXN1bHRhZG8vY292aWQxOS1yZXN1bHRhZG8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0NBQUE7RUFDQSx3RUFBQTtBQUNGO0FBQ0U7RUFDRSxZQUFBO0VBQ0EsWUFBQTtBQUNKO0FBRUU7RUFFRSxnQkFBQTtBQURKO0FBR0k7RUFDRSxlQUFBO0VBQ0EsNkJBQUE7RUFDQSxrQkFBQTtBQUROO0FBR007RUFDRSxjQUFBO0FBRFI7QUFJTTtFQUNFLG1CQUFBO0FBRlI7QUFPRTtFQUNFLFVBQUE7QUFMSjtBQVFFO0VBQ0UseUJBQUE7RUFDQSxzQkFBQTtFQUNBLGtDQUFBO0VBR0EsMkJBQUE7QUFOSjtBQVNFO0VBQ0UsNEJBQUE7RUFDQSw2QkFBQTtBQVBKO0FBVUU7RUFDRSw0QkFBQTtFQUNBLDZCQUFBO0FBUko7QUFXRTtFQUNFLG1CQUFBO0FBVEo7QUFZRTtFQUNFLGdCQUFBO0VBQ0EsaUJBQUE7QUFWSjtBQVdJO0VBQ0UsbUJBQUE7QUFUTjtBQWFFO0VBQ0UsNkJBQUE7QUFYSjtBQWNFO0VBQ0UseUJBQUE7RUFDQSxjQUFBO0FBWkoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9jb3ZpZDE5LXJlc3VsdGFkby9jb3ZpZDE5LXJlc3VsdGFkby5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWVlZWUgIWltcG9ydGFudDtcbiAgLS1wYWRkaW5nLXRvcDogY2FsYyh2YXIoLS1pb24tcGFkZGluZywgMTZweCkgKyBlbnYoc2FmZS1hcmVhLWluc2V0LXRvcCkpO1xuXG4gICYgLmxvZ28ge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IDgwcHg7XG4gIH1cblxuICAmIC5yZXN1bHQsXG4gICYgLmVycm9yIHtcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xuXG4gICAgJiBwIHtcbiAgICAgIG1hcmdpbjogaW5pdGlhbDtcbiAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdCAhaW1wb3J0YW50O1xuICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuXG4gICAgICAmLnN1Z2dlc3Rpb24ge1xuICAgICAgICBjb2xvcjogI2ZmNzUwMDtcbiAgICAgIH1cblxuICAgICAgJjpub3QoLnRleHQtY2VudGVyKSB7XG4gICAgICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJiAuZXJyb3Ige1xuICAgIGNvbG9yOiByZWQ7XG4gIH1cblxuICAmIGlvbi1jYXJkIHtcbiAgICBtYXJnaW46IDIwcHggMCAhaW1wb3J0YW50O1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICAtbW96LWJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cblxuICAmIGlvbi1jYXJkLWhlYWRlciB7XG4gICAgcGFkZGluZy1sZWZ0OiAwcHggIWltcG9ydGFudDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwcHggIWltcG9ydGFudDtcbiAgfVxuXG4gICYgaW9uLWNhcmQtY29udGVudCB7XG4gICAgcGFkZGluZy1sZWZ0OiAwcHggIWltcG9ydGFudDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwcHggIWltcG9ydGFudDtcbiAgfVxuXG4gICYgLmp1c3RpZmljYXIge1xuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gIH1cblxuICAmIC51bnN0eWxlZC1saXN0IHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHBhZGRpbmctbGVmdDogMHB4O1xuICAgICYgbGkge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICB9XG4gIH1cblxuICAmIGJ1dHRvbiB7XG4gICAgcGFkZGluZzogMjVweCAzNXB4ICFpbXBvcnRhbnQ7XG4gIH1cblxuICAmIC5ncmVlbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYjA1MDtcbiAgICBjb2xvcjogI2VlZWVlZTtcbiAgfVxufVxuIl19 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Geolocation as GeolocationService } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder } from '@ionic-native/native-geocoder/ngx';\nimport { AlertController } from '@ionic/angular';\nimport { finalize } from 'rxjs/operators';\nimport { alertCommunicationError } from 'src/app/commons/user-feedback';\nimport { Poll } from 'src/app/entities/autoevaluacion-covid19';\nimport { Geolocation } from 'src/app/entities/condiciones-salud';\nimport { AutoevaluacionCOVID19Service } from 'src/app/services/autoevaluacion-covid19.service';\nimport { UtilsService } from 'src/app/services/utils.service';\n\n/**\n * Componente de la vista de resultado para el módulo de autoevaluación COVID-19.\n */\n@Component({\n  selector: 'app-covid19-resultado',\n  templateUrl: './covid19-resultado.page.html',\n  styleUrls: ['./covid19-resultado.page.scss'],\n})\nexport class Covid19ResultadoPage implements OnInit {\n\n  /**\n   * Indica si debe mostrarse el mensaje con el resultado de la encuesta.\n   */\n  showResult: boolean;\n\n  /**\n   * Indica si debe mostrarse un mensaje de error de conexión con el servicio.\n   */\n  showError: boolean;\n\n  /**\n   * Fecha y hora en la que se registra la encuesta.\n   */\n  pollDate: string;\n\n  /**\n   * Indica si debe mostrarse la recomendación de quedarse en casa para el caso en el que el resultado\n   * de la encuesta arroje sospechoso.\n   */\n  showSuggestion: boolean;\n\n  /**\n   * Encuesta.\n   */\n  private poll: Poll;\n\n  constructor(\n    private utils: UtilsService,\n    private provider: AutoevaluacionCOVID19Service,\n    private geolocation: GeolocationService,\n    private nativeGeocoder: NativeGeocoder,\n    private alertCtrl: AlertController,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.poll = this.router.getCurrentNavigation().extras.state.poll;\n    this.getIPAddress();\n  }\n\n  /**\n   * Redirige a la vista de inicio de la aplicación.\n   */\n  goToHome(): void {\n    this.router.navigate(['/home']);\n  }\n\n  /**\n   * Obtiene la dirección _IP_ pública desde la cual se realizan las peticiones.\n   */\n  private async getIPAddress(): Promise<void> {\n    if (!this.poll) {\n      this.poll = new Poll();\n    }\n\n    await this.utils.presentLoading();\n\n    this.utils.getIPAddress()\n      .pipe(finalize(() => this.utils.dismissLoading()))\n      .subscribe(\n        r => {\n          const body = r;\n          const ip = body.ip;\n          this.poll.userData.ip = ip;\n          this.getCurrentPosition(this.poll);\n        },\n        () => this.getCurrentPosition(this.poll)\n      );\n  }\n\n  /**\n   * Obtiene las coordenadas de ubicación física del dispositivo.\n   *\n   * @param poll Encuesta.\n   */\n  private async getCurrentPosition(poll: Poll): Promise<void> {\n    const onFinally = (latitude?: string, longitude?: string): void => {\n      this.utils.dismissLoading();\n      const geolocation = new Geolocation();\n      geolocation.latitude = latitude;\n      geolocation.longitude = longitude;\n      poll.geolocation = geolocation;\n      this.getAddress(poll);\n    };\n\n    await this.utils.presentLoading();\n\n    this.geolocation.getCurrentPosition()\n      .then(r => onFinally(`${r.coords.latitude}`, `${r.coords.longitude}`))\n      .catch(() => onFinally());\n  }\n\n  /**\n   * Obtiene la dirección descriptiva a partir de las coordenadas obtenidas del dispositivo.\n   *\n   * @param poll Encuesta.\n   */\n  private async getAddress(poll: Poll): Promise<void> {\n    const onFinally = (address?: string): void => {\n      this.utils.dismissLoading();\n      poll.geolocation.address = address;\n      this.sendPoll(poll);\n    };\n\n    const latitude = poll.geolocation.latitude;\n    const longitude = poll.geolocation.longitude;\n\n    if (!latitude || !longitude) {\n      return this.sendPoll(poll);\n    }\n\n    await this.utils.presentLoading();\n\n    this.nativeGeocoder.reverseGeocode(+latitude, +longitude)\n      .then(r => {\n        // Calle o carrera\n        let address = !!r[0].thoroughfare ? r[0].thoroughfare : '';\n\n        // Número\n        address = !!r[0].subThoroughfare ?\n          address !== '' ? `${address} #${r[0].subThoroughfare}` : `#${r[0].subThoroughfare}`\n          : address;\n\n        // Ciudad\n        address = !!r[0].administrativeArea ?\n          address !== '' ? `${address}, ${r[0].subAdministrativeArea}` : `${r[0].subAdministrativeArea}`\n          : address;\n\n        // Departamento\n        address = !!r[0].administrativeArea ?\n          address !== '' ? `${address}, ${r[0].administrativeArea}` : `${r[0].administrativeArea}`\n          : address;\n\n        onFinally(address);\n      })\n      .catch(() => onFinally());\n  }\n\n  /**\n   * Envía la encuesta para su registro.\n   *\n   * @param poll Encuesta.\n   */\n  private async sendPoll(poll: Poll): Promise<void> {\n    const body = poll.deserialize();\n    await this.utils.presentLoading();\n\n    this.provider.submitPoll(body)\n      .pipe(finalize(() => this.utils.dismissLoading()))\n      .subscribe(\n        r => {\n          const b = r;\n          this.showSuggestion = b.esSospechoso;\n          this.pollDate = b.fechaStr;\n          this.showResult = true;\n        },\n        () => {\n          alertCommunicationError(this.alertCtrl);\n          this.router.navigate(['/home']);\n        }\n      );\n  }\n\n}\n"]}