{"version":3,"sources":["webpack:///src/app/pages/chequeos-resultado/chequeos-resultado.page.html","webpack:///src/app/pages/chequeos-resultado/chequeos-resultado-routing.module.ts","webpack:///src/app/pages/chequeos-resultado/chequeos-resultado.module.ts","webpack:///src/app/pages/chequeos-resultado/chequeos-resultado.page.scss","webpack:///src/app/pages/chequeos-resultado/chequeos-resultado.page.ts"],"names":["routes","path","component","ChequeosResultadoPageRoutingModule","imports","forChild","exports","ChequeosResultadoPageModule","declarations","ChequeosResultadoPage","utils","geolocation","nativeGeocoder","provider","alertCtrl","datePipe","router","poll","getCurrentNavigation","extras","state","id","showResult","getIPAddress","navigate","userData","companyData","name","firstName","middleName","surname","secondSurname","idType","idNumber","businessName","companyID","applicationDate","transform","date","applicationCode","presentLoading","pipe","dismissLoading","subscribe","r","body","ip","getCurrentPosition","onFinally","latitude","longitude","getAddress","then","coords","address","sendPoll","reverseGeocode","thoroughfare","subThoroughfare","administrativeArea","subAdministrativeArea","deserialize","submitPoll","FechaAplicacion","CodigoAPP","selector","template"],"mappings":"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","file":"chequeos-resultado-chequeos-resultado-module-es5.js","sourcesContent":["export default \"<ion-content class=\\\"ion-padding\\\">\\n\\n  <div class=\\\"clearfix logo-wrapper\\\">\\n\\n    <!-- Logo de Positiva -->\\n    <ion-img class=\\\"logo place-left\\\" [src]=\\\"'assets/img/positiva-compania-de-seguros.png'\\\"></ion-img>\\n\\n    <!-- Logo de Alissta -->\\n    <ion-img class=\\\"logo place-right\\\" [src]=\\\"'assets/img/alissta_logo.svg'\\\"></ion-img>\\n\\n  </div>\\n\\n  <ion-list lines=\\\"none\\\" *ngIf=\\\"showResult\\\">\\n\\n    <!-- Nombre de usuario -->\\n    <ion-item>\\n      <ion-label class=\\\"text-bold\\\" position=\\\"stacked\\\">Nombre Usuario</ion-label>\\n      <ion-label position=\\\"stacked\\\">\\n        {{ poll.userData.firstName + ' ' + poll.userData.middleName + ' ' + poll.userData.surname + ' ' + poll.userData.secondSurname }}\\n      </ion-label>\\n    </ion-item>\\n\\n    <!-- Identificación de usuario -->\\n    <ion-item>\\n      <ion-label class=\\\"text-bold\\\" position=\\\"stacked\\\">Identificación de Usuario</ion-label>\\n      <ion-label position=\\\"stacked\\\">\\n        {{ poll.userData.idType + ' ' + poll.userData.idNumber }}\\n      </ion-label>\\n    </ion-item>\\n\\n    <!-- Razón social de la empresa o contratante -->\\n    <ion-item>\\n      <ion-label class=\\\"text-bold\\\" position=\\\"stacked\\\">Razón Social Empresa</ion-label>\\n      <ion-label position=\\\"stacked\\\">\\n        {{ poll.companyData.businessName }}\\n      </ion-label>\\n    </ion-item>\\n\\n    <!-- Identificación de la empresa o contratante -->\\n    <ion-item>\\n      <ion-label class=\\\"text-bold\\\" position=\\\"stacked\\\">Identificación Empresa</ion-label>\\n      <ion-label position=\\\"stacked\\\">\\n        {{ poll.companyData.idType + ' ' + poll.companyData.idNumber }}\\n      </ion-label>\\n    </ion-item>\\n\\n    <!-- Fecha de aplicación del chequeo médico -->\\n    <ion-item>\\n      <ion-label class=\\\"text-bold\\\" position=\\\"stacked\\\">Fecha encuesta chequeo médico</ion-label>\\n      <ion-label position=\\\"stacked\\\">\\n        {{ poll.date | date: 'dd-MM-yyyy hh:mm a' }}\\n      </ion-label>\\n    </ion-item>\\n\\n    <!-- Código de la aplicación del chequeo médico -->\\n    <ion-item>\\n      <ion-label class=\\\"text-bold\\\" position=\\\"stacked\\\">Código ID</ion-label>\\n      <ion-label position=\\\"stacked\\\">\\n        {{ poll.id }}\\n      </ion-label>\\n    </ion-item>\\n\\n    <div class=\\\"qr-wrapper\\\">\\n      <qrcode [qrdata]=\\\"getQRData()\\\"></qrcode>\\n    </div>\\n\\n  </ion-list>\\n\\n  <div>\\n    <ion-card>\\n      <ion-card-header class=\\\"text-center\\\">\\n        Referencias\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p class=\\\"justificar\\\">\\n          Enlaces de interés y referencias sobre recomendaciones para la prevención COVID-19\\n        </p>\\n        <ul class=\\\"unstyled-list\\\">\\n          <li><a href=\\\"https://covid19.minsalud.gov.co/\\\">Ministerio de Salud y Protección Social</a></li>\\n          <li><a href=\\\"https://www.ins.gov.co/Noticias/Paginas/Coronavirus.aspx\\\">Instituto Nacional de Salud</a></li>\\n          <li><a href=\\\"https://www.paho.org/col/index.php?option=com_docman&view=download&category_slug=publicaciones-ops-oms-colombia&alias=856-mopece4&Itemid=688\\\">Organización Panamericana de la Salud / Organización Mundial de la Salud</a></li>\\n        </ul>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n\\n  <!-- Botones de acción -->\\n  <div class=\\\"text-center\\\">\\n    <ion-button color=\\\"primary\\\" (click)=\\\"goToHome()\\\">Continuar</ion-button>\\n  </div>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ChequeosResultadoPage } from './chequeos-resultado.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChequeosResultadoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChequeosResultadoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared.module';\nimport { ChequeosResultadoPageRoutingModule } from './chequeos-resultado-routing.module';\nimport { ChequeosResultadoPage } from './chequeos-resultado.page';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ChequeosResultadoPageRoutingModule\n  ],\n  declarations: [ChequeosResultadoPage]\n})\nexport class ChequeosResultadoPageModule {}\n","export default \"ion-content {\\n  background-color: #eeeeee !important;\\n  --padding-top: calc(var(--ion-padding, 16px) + env(safe-area-inset-top));\\n}\\nion-content .logo-wrapper {\\n  margin-top: 25px;\\n}\\nion-content .logo-wrapper .logo {\\n  width: 150px;\\n  height: 50px;\\n}\\nion-content ion-list ion-item {\\n  background-color: transparent !important;\\n}\\nion-content ion-list ion-item ion-label {\\n  font-size: 1.2rem !important;\\n}\\nion-content ion-list .qr-wrapper {\\n  margin-top: 25px;\\n}\\nion-content ion-list .qr-wrapper qrcode {\\n  display: block;\\n  margin: auto;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n}\\nion-content ion-card {\\n  margin: 20px 0 !important;\\n  width: 100% !important;\\n  background: transparent !important;\\n  box-shadow: none !important;\\n}\\nion-content ion-card-header {\\n  padding-left: 0px !important;\\n  padding-right: 0px !important;\\n}\\nion-content ion-card-content {\\n  padding-left: 0px !important;\\n  padding-right: 0px !important;\\n}\\nion-content .justificar {\\n  text-align: justify;\\n}\\nion-content .unstyled-list {\\n  list-style: none;\\n  padding-left: 0px;\\n}\\nion-content .unstyled-list li {\\n  margin-bottom: 10px;\\n}\\nion-content button {\\n  padding: 25px 35px !important;\\n}\\nion-content .green {\\n  background-color: #00b050;\\n  color: #eeeeee;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY2hlcXVlb3MtcmVzdWx0YWRvL2NoZXF1ZW9zLXJlc3VsdGFkby5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQ0FBQTtFQUNBLHdFQUFBO0FBQ0Y7QUFDRTtFQUNFLGdCQUFBO0FBQ0o7QUFDSTtFQUNFLFlBQUE7RUFDQSxZQUFBO0FBQ047QUFJSTtFQUNFLHdDQUFBO0FBRk47QUFJTTtFQUNFLDRCQUFBO0FBRlI7QUFNSTtFQUNFLGdCQUFBO0FBSk47QUFNTTtFQUNFLGNBQUE7RUFDQSxZQUFBO0VBQ0EsdUJBQUE7RUFBQSxrQkFBQTtBQUpSO0FBU0U7RUFDRSx5QkFBQTtFQUNBLHNCQUFBO0VBQ0Esa0NBQUE7RUFHQSwyQkFBQTtBQVBKO0FBVUU7RUFDRSw0QkFBQTtFQUNBLDZCQUFBO0FBUko7QUFXRTtFQUNFLDRCQUFBO0VBQ0EsNkJBQUE7QUFUSjtBQVlFO0VBQ0UsbUJBQUE7QUFWSjtBQWFFO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtBQVhKO0FBWUk7RUFDRSxtQkFBQTtBQVZOO0FBY0U7RUFDRSw2QkFBQTtBQVpKO0FBZUU7RUFDRSx5QkFBQTtFQUNBLGNBQUE7QUFiSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoZXF1ZW9zLXJlc3VsdGFkby9jaGVxdWVvcy1yZXN1bHRhZG8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVlICFpbXBvcnRhbnQ7XG4gIC0tcGFkZGluZy10b3A6IGNhbGModmFyKC0taW9uLXBhZGRpbmcsIDE2cHgpICsgZW52KHNhZmUtYXJlYS1pbnNldC10b3ApKTtcblxuICAmIC5sb2dvLXdyYXBwZXIge1xuICAgIG1hcmdpbi10b3A6IDI1cHg7XG5cbiAgICAmIC5sb2dvIHtcbiAgICAgIHdpZHRoOiAxNTBweDtcbiAgICAgIGhlaWdodDogNTBweDtcbiAgICB9XG4gIH1cblxuICAmIGlvbi1saXN0IHtcbiAgICAmIGlvbi1pdGVtIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG5cbiAgICAgICYgaW9uLWxhYmVsIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjJyZW0gIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmIC5xci13cmFwcGVyIHtcbiAgICAgIG1hcmdpbi10b3A6IDI1cHg7XG5cbiAgICAgICYgcXJjb2RlIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYgaW9uLWNhcmQge1xuICAgIG1hcmdpbjogMjBweCAwICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgIC13ZWJraXQtYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIC1tb3otYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuXG4gICYgaW9uLWNhcmQtaGVhZGVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctcmlnaHQ6IDBweCAhaW1wb3J0YW50O1xuICB9XG5cbiAgJiBpb24tY2FyZC1jb250ZW50IHtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctcmlnaHQ6IDBweCAhaW1wb3J0YW50O1xuICB9XG5cbiAgJiAuanVzdGlmaWNhciB7XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgfVxuXG4gICYgLnVuc3R5bGVkLWxpc3Qge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZy1sZWZ0OiAwcHg7XG4gICAgJiBsaSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIH1cbiAgfVxuXG4gICYgYnV0dG9uIHtcbiAgICBwYWRkaW5nOiAyNXB4IDM1cHggIWltcG9ydGFudDtcbiAgfVxuXG4gICYgLmdyZWVuIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBiMDUwO1xuICAgIGNvbG9yOiAjZWVlZWVlO1xuICB9XG59XG4iXX0= */\";","import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Geolocation as GeolocationService } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder } from '@ionic-native/native-geocoder/ngx';\nimport { AlertController } from '@ionic/angular';\nimport { finalize } from 'rxjs/operators';\nimport { alertCommunicationError } from 'src/app/commons/user-feedback';\nimport { Poll } from 'src/app/entities/chequeo-covid19';\nimport { ChequeosCOVID19Service } from 'src/app/services/chequeo-covid19.service';\nimport { UtilsService } from 'src/app/services/utils.service';\nimport { Geolocation } from 'src/app/entities/condiciones-salud';\n\n/**\n * Componente de la vista de resultado para el módulo de encuesta de chequeos médicos.\n */\n@Component({\n  selector: 'app-chequeos-resultado',\n  templateUrl: './chequeos-resultado.page.html',\n  styleUrls: ['./chequeos-resultado.page.scss'],\n})\nexport class ChequeosResultadoPage implements OnInit {\n\n  /**\n   * Encuesta.\n   */\n  poll: Poll;\n\n  /**\n   * Indica si debe mostrarse el mensaje con el resultado de la encuesta.\n   */\n  showResult: boolean;\n\n  /**\n   * Fecha de aplicación del chequeo médico.\n   */\n  datePoll: string;\n\n  /**\n   * Identificador de la aplicación del chequeo médico.\n   */\n  idPoll: string;\n\n  constructor(\n    private utils: UtilsService,\n    private geolocation: GeolocationService,\n    private nativeGeocoder: NativeGeocoder,\n    private provider: ChequeosCOVID19Service,\n    private alertCtrl: AlertController,\n    private datePipe: DatePipe,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.poll = this.router.getCurrentNavigation().extras.state.poll;\n\n    if (!!this.poll.id) {\n      this.showResult = true;\n\n      return;\n    }\n\n    this.getIPAddress();\n  }\n\n  /**\n   * Redirige a la vista de inicio de la aplicación.\n   */\n  goToHome(): void {\n    this.router.navigate(['/home']);\n  }\n\n  /**\n   * Obtiene los datos para construir el código _QR_.\n   */\n  getQRData(): string {\n    const userData = this.poll.userData;\n    const companyData = this.poll.companyData;\n    const name = `${userData.firstName} ${userData.middleName} ${userData.surname} ${userData.secondSurname}`;\n    const id = `${userData.idType} ${userData.idNumber}`;\n    const businessName = companyData.businessName;\n    const companyID = `${companyData.idType} ${companyData.idNumber}`;\n    const applicationDate = this.datePipe.transform(this.poll.date, 'dd-MM-yyyy hh:mm a');\n    const applicationCode = `${this.poll.id}`;\n\n    return `${name};${id};${businessName};${companyID};${applicationDate};${applicationCode}`;\n  }\n\n  /**\n   * Obtiene la dirección _IP_ pública desde la cual se realizan las peticiones.\n   */\n  private async getIPAddress(): Promise<void> {\n    await this.utils.presentLoading();\n\n    this.utils.getIPAddress()\n      .pipe(finalize(() => this.utils.dismissLoading()))\n      .subscribe(\n        r => {\n          const body = r;\n          const ip = body.ip;\n          this.poll.userData.ip = ip;\n          this.getCurrentPosition();\n        },\n        () => this.getCurrentPosition()\n      );\n  }\n\n  /**\n   * Obtiene las coordenadas de ubicación física del dispositivo.\n   */\n  private async getCurrentPosition(): Promise<void> {\n    const onFinally = (latitude?: string, longitude?: string): void => {\n      this.utils.dismissLoading();\n      const geolocation = new Geolocation();\n      geolocation.latitude = latitude;\n      geolocation.longitude = longitude;\n      this.poll.geolocation = geolocation;\n      this.getAddress();\n    };\n\n    await this.utils.presentLoading();\n\n    this.geolocation.getCurrentPosition()\n      .then(r => onFinally(`${r.coords.latitude}`, `${r.coords.longitude}`))\n      .catch(() => onFinally());\n  }\n\n  /**\n   * Obtiene la dirección descriptiva a partir de las coordenadas obtenidas del dispositivo.\n   *\n   * @param poll Encuesta.\n   */\n  private async getAddress(): Promise<void> {\n    const onFinally = (address?: string): void => {\n      this.utils.dismissLoading();\n      this.poll.geolocation.address = address;\n      this.sendPoll();\n    };\n\n    const latitude = this.poll.geolocation.latitude;\n    const longitude = this.poll.geolocation.longitude;\n\n    if (!latitude || !longitude) {\n      return this.sendPoll();\n    }\n\n    await this.utils.presentLoading();\n\n    this.nativeGeocoder.reverseGeocode(+latitude, +longitude)\n      .then(r => {\n        // Calle o carrera\n        let address = !!r[0].thoroughfare ? r[0].thoroughfare : '';\n\n        // Número\n        address = !!r[0].subThoroughfare ?\n          address !== '' ? `${address} #${r[0].subThoroughfare}` : `#${r[0].subThoroughfare}`\n          : address;\n\n        // Ciudad\n        address = !!r[0].administrativeArea ?\n          address !== '' ? `${address}, ${r[0].subAdministrativeArea}` : `${r[0].subAdministrativeArea}`\n          : address;\n\n        // Departamento\n        address = !!r[0].administrativeArea ?\n          address !== '' ? `${address}, ${r[0].administrativeArea}` : `${r[0].administrativeArea}`\n          : address;\n\n        onFinally(address);\n      })\n      .catch(() => onFinally());\n  }\n\n  /**\n   * Envía la encuesta para su registro.\n   *\n   * @param poll Encuesta.\n   */\n  private async sendPoll(): Promise<void> {\n    let body = this.poll.deserialize();\n    await this.utils.presentLoading();\n\n    this.provider.submitPoll(body)\n      .pipe(finalize(() => this.utils.dismissLoading()))\n      .subscribe(\n        r => {\n          body = r;\n          this.poll.date = body.FechaAplicacion;\n          this.poll.id = body.CodigoAPP;\n          this.showResult = true;\n        },\n        () => {\n          alertCommunicationError(this.alertCtrl);\n          this.router.navigate(['/home']);\n        }\n      );\n  }\n\n}\n"]}