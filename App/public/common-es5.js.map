{"version":3,"sources":["webpack:///node_modules/@capacitor/camera/dist/esm/definitions.js","webpack:///node_modules/@capacitor/camera/dist/esm/index.js","webpack:///node_modules/@ionic/core/dist/esm/button-active-d4bd4f74.js","webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-94e770cc.js","webpack:///node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","webpack:///node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","webpack:///src/app/commons/asunto-mensaje.ts","webpack:///src/app/entities/autoevaluacion-covid19.ts","webpack:///src/app/entities/chequeo-covid19.ts","webpack:///src/app/entities/condiciones-salud.ts","webpack:///src/app/entities/proceso.ts","webpack:///src/app/entities/sede.ts","webpack:///src/app/entities/tema-asesoria.ts","webpack:///src/app/interfaces/edinfo-auditoria-app.ts","webpack:///src/app/services/SST/menu-sstservice.service.ts","webpack:///src/app/services/asesoria-sst.service.ts","webpack:///src/app/services/autoevaluacion-covid19.service.ts","webpack:///src/app/services/chequeo-covid19.service.ts","webpack:///src/app/services/empresa.service.ts"],"names":["CameraSource","CameraDirection","CameraResultType","Camera","web","then","m","CameraWeb","createButtonActiveGesture","el","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","classList","add","dispatchClick","remove","click","undefined","gestureName","threshold","onStart","ev","currentX","currentY","onMove","onEnd","attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","forEach","c","Object","assign","appendChild","Promise","resolve","detachComponent","element","parentElement","removeViewFromDom","HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact","spinners","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","SPINNERS","hostContext","selector","closest","createColorClasses","color","cssClassMap","length","getClassList","classes","array","Array","isArray","split","filter","map","trim","getClassMap","SCHEME","openURL","url","direction","animation","test","router","querySelector","preventDefault","push","ASUNTO_MENSAJE_RENDICION_CUENTAS","Question","json","PK_ID_AutoEvaluacionCovidPreguntas","FIELD_NAMES","description","descripcionPregunta","opciones","_name","id","answer","indexOf","name","Poll","ret","questions","geolocation","userData","companyData","q","deserialize","habitualWork","specificWork","questionOne","questionTwo","questionThree","questionFour","questionFive","questionSix","questionSeven","questionEight","questionNine","clearQuestionFive","questionTen","questionEleven","questionTwelve","questionThirdteen","questionFourteen","questionFifteen","questionSixteen","questionSeventeen","questionEighteen","questionNineteen","clearQuestionEight","questionTwenty","questionTwentyOne","UserData","firstName","middleName","surname","secondSurname","email","phone","ip","idType","idNumber","sex","birthday","idEPS","nameEPS","address","bussinessID","businessName","idAdminArea","nameAdminArea","idSubAdminArea","nameSubAdminArea","agree","CompanyData","businessID","businessDescription","Geolocation","latitude","longitude","Proceso","Id_Proceso","_nombre","Descripcion","nombre","item","Sede","IdSede","NombreSede","TemaAsesoria","PK_ID_EVTemasAgendamiento","strDescripcionTemaEvento","_observacion","strObservacionesTemaEvento","observacion","EDInfoAuditoriaAPP","strIdentificacionUsuario","strNombreUsuario","strNombreEmpresa","strTipoDocEmpresa","strDocumentoEmpresa","strUUID","strLatitud","strLongitud","MenuSSTService","menuSSTSource","menuPlanEmergencia","menuSST","asObservable","menuPlan","next","providedIn","AsesoriaSstService","http","context","getEnvUrl","call","get","idTema","intFk_Id_Tema","intIDUsuarioExpertoTecnico","strFechaConsulta","strTipoAgenda","strToken","data","headers","append","post","strFechaInicioBusqueda","strFechaFinalBusqueda","strNumeroDocumentoUsuario","intFk_ID_Tema_Agendamiento","intNumeroPagina","intPageSize","strIP","AutoevaluacionCOVID19Service","QUESTIONS_URI","POLL_URI","UPDATED_DATA_URI","domain","poll","body","fromObject","ChequeosCOVID19Service","CHECK_POLL_URI","EmpresaService","nit","console","log","getAlisstaWeb"],"mappings":"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","file":"common-es5.js","sourcesContent":["export var CameraSource;\n(function (CameraSource) {\n    /**\n     * Prompts the user to select either the photo album or take a photo.\n     */\n    CameraSource[\"Prompt\"] = \"PROMPT\";\n    /**\n     * Take a new photo using the camera.\n     */\n    CameraSource[\"Camera\"] = \"CAMERA\";\n    /**\n     * Pick an existing photo from the gallery or photo album.\n     */\n    CameraSource[\"Photos\"] = \"PHOTOS\";\n})(CameraSource || (CameraSource = {}));\nexport var CameraDirection;\n(function (CameraDirection) {\n    CameraDirection[\"Rear\"] = \"REAR\";\n    CameraDirection[\"Front\"] = \"FRONT\";\n})(CameraDirection || (CameraDirection = {}));\nexport var CameraResultType;\n(function (CameraResultType) {\n    CameraResultType[\"Uri\"] = \"uri\";\n    CameraResultType[\"Base64\"] = \"base64\";\n    CameraResultType[\"DataUrl\"] = \"dataUrl\";\n})(CameraResultType || (CameraResultType = {}));\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\nconst Camera = registerPlugin('Camera', {\n    web: () => import('./web').then(m => new m.CameraWeb()),\n});\nexport * from './definitions';\nexport { Camera };\n//# sourceMappingURL=index.js.map","import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-34cb2743.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-1457892a.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export const ASUNTO_MENSAJE_RENDICION_CUENTAS = 'Rendición de Cuentas';\n","import { CompanyData, Geolocation, UserData } from './condiciones-salud';\nimport { Entity } from './entity';\n\n/**\n * Pregunta de la encuesta para autoevaluación COVID-19.\n */\nexport class Question extends Entity {\n  /**\n   * Texto descriptivo de la pregunta.\n   */\n  description: string;\n\n  /**\n   * Respuesta de la pregunta.\n   */\n  answer: any;\n\n  /**\n   * Opciones de respueta disponibles para esta pregunta.\n   */\n  options: { label: string; value: any }[];\n\n  /**\n   * Nombre del campo de la pregunta.\n   */\n  get name(): string {\n    return this._name;\n  }\n\n  private _name: string;\n\n  /**\n   * Nombres de los campos de las preguntas. Esto concuerda con el nombre que recibe el servicio.\n   */\n  private readonly FIELD_NAMES = {\n    1: 'PreguntaUno',\n    2: 'PreguntaDos',\n    3: 'PreguntaTres',\n    4: 'PreguntaCuatro',\n    5: 'PreguntaCinco',\n    6: 'PreguntaSeis',\n    7: 'PreguntaSiete',\n    8: 'PreguntaOcho',\n    9: 'PreguntaNueve',\n    10: 'PreguntaDiez',\n    11: 'PreguntaOnce',\n    12: 'PreguntaDoce',\n    13: 'PreguntaTrece',\n    14: 'PreguntaCatorce',\n    15: 'PreguntaQuince',\n  };\n\n  constructor(json: any) {\n    super(json.PK_ID_AutoEvaluacionCovidPreguntas);\n\n    this.description = json.descripcionPregunta;\n    this.options = json.opciones;\n    this._name = this.FIELD_NAMES[this.id];\n  }\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    if (this.id === 3) {\n      this.answer = [undefined, ''].indexOf(this.answer) > -1 ? 'No Aplica' : this.answer;\n    }\n\n    return { [this.name]: this.answer };\n  }\n}\n\n/**\n * Cuestionario de autoevaluación COVID-19.\n */\nexport class Poll extends Entity {\n  /**\n   * Preguntas del cuestionario.\n   */\n  questions: Question[];\n\n  /**\n   * Ubicación del dispositivo desde el que se envían las preguntas del cuestionario.\n   */\n  geolocation: Geolocation;\n\n  /**\n   * Datos de usuario.\n   */\n  userData: UserData;\n\n  /**\n   * Datos de la compañía o contratante.\n   */\n  companyData: CompanyData;\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    let ret = {};\n\n    this.questions = this.questions ? this.questions : [];\n    this.geolocation = this.geolocation ? this.geolocation : new Geolocation();\n    this.userData = this.userData ? this.userData : new UserData();\n    this.companyData = this.companyData ? this.companyData : new CompanyData();\n\n    this.questions.forEach(q => {\n      ret = { ...ret, ...q.deserialize() };\n    });\n\n    ret = { ...ret, ...this.geolocation.deserialize() };\n    ret = { ...ret, ...this.userData.deserialize() };\n    ret = { ...ret, ...this.companyData.deserialize() };\n\n    return ret;\n  }\n}\n","import { CompanyData as CondicionesCompanyData, Geolocation, UserData as CondicionesUserData } from './condiciones-salud';\nimport { Entity } from './entity';\n\n/**\n * Pregunta de la encuesta para chequeo médico COVID-19.\n */\nexport class Question {\n  /**\n   * Respuesta de la pregunta.\n   */\n  answer: any;\n\n  /**\n   * Nombre del campo de la pregunta.\n   */\n  get name(): string {\n    return this._name;\n  }\n\n  private _name: string;\n\n  /**\n   * Nombres de los campos de las preguntas. Esto concuerda con el nombre que recibe el servicio.\n   */\n  private readonly FIELD_NAMES = {\n    habitualWork: 'SectorLabolHabitual',\n    specificWork: 'DetalleLabolHabitual',\n    questionOne: 'PreguntaUno',\n    questionTwo: 'PreguntaDos',\n    questionThree: 'PreguntaTres',\n    questionFour: 'PreguntaCuatro',\n    questionFive: 'PreguntaCincoUno',\n    questionSix: 'PreguntaCincoDos',\n    questionSeven: 'PreguntaCincoTres',\n    questionEight: 'PreguntaCincoCuatro',\n    questionNine: 'PreguntaCincoCinco',\n    clearQuestionFive: 'PreguntaCincoSeis',\n    questionTen: 'PreguntaSeis',\n    questionEleven: 'PreguntaSiete',\n    questionTwelve: 'PreguntaOchoUno',\n    questionThirdteen: 'PreguntaOchoDos',\n    questionFourteen: 'PreguntaOchoTres',\n    questionFifteen: 'PreguntaOchoCuatro',\n    questionSixteen: 'PreguntaOchoCinco',\n    questionSeventeen: 'PreguntaOchoSeis',\n    questionEighteen: 'PreguntaOchoSiete',\n    questionNineteen: 'PreguntaOchoOcho',\n    clearQuestionEight: 'PreguntaOchoNueve',\n    questionTwenty: 'PreguntaNueve',\n    questionTwentyOne: 'PreguntaDiez',\n  };\n\n  constructor(name: string, answer: any) {\n    this._name = name;\n    this.answer = answer;\n  }\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    return { [this.FIELD_NAMES[this.name]]: this.answer };\n  }\n}\n\n/**\n * Datos del usuario que realiza el cuestionario de chequeo médico COVID-19.\n */\nexport class UserData extends CondicionesUserData {\n  protected readonly FIELD_NAMES = {\n    firstName: 'PrimerNombreTrabajador',\n    middleName: 'SegundoNombreTrabajador',\n    surname: 'PrimerApellidoTrabajador',\n    secondSurname: 'SegundoApellidoTrabajador',\n    email: 'CorreoTrabajador',\n    phone: 'NumeroTelefono',\n    ip: 'IP',\n    idType: 'TipoDocTrabajador',\n    idNumber: 'NumeroDocumentoTrabajador',\n    sex: 'SexoTrabajador',\n    birthday: 'FechaNacimiento',\n    idEPS: 'IdEPS',\n    nameEPS: 'NombreEPS',\n    address: 'DireccionTrabajador',\n    bussinessID: 'ID_OCUPACION',\n    businessName: 'NOMBRE_OCUPACION',\n    idAdminArea: 'IDDepartamentoTrabajador',\n    nameAdminArea: 'NombreDepartamentoTrabajador',\n    idSubAdminArea: 'IDMunicipioTrabajador',\n    nameSubAdminArea: 'NombreMunicipioTrabajador',\n    agree: 'AceptaParticipacion',\n  };\n\n  deserialize(): any {\n    const ret = super.deserialize();\n\n    // Campos no necesarios para este consumo\n\n    delete ret[this.FIELD_NAMES.bussinessID];\n    delete ret[this.FIELD_NAMES.businessName];\n\n    return ret;\n  }\n}\n\n/**\n * Datos de la compañía o contratante que emplea al usuario que realiza la encuesta.\n */\nexport class CompanyData extends CondicionesCompanyData {\n  protected readonly FIELD_NAMES = {\n    idType: 'tipoDocEmpresa',\n    idNumber: 'NitEmpresa',\n    businessName: 'RazonSocial',\n    businessID: 'ActividadEconomicaPrincipal',\n    businessDescription: 'DescripcionActivdadEconomicaPrincipal',\n    idAdminArea: 'IDDepartamentoEmpresa',\n    nameAdminArea: 'NombreDepartamentoEmpresa',\n    idSubAdminArea: 'IDMunicipioEmpresa',\n    nameSubAdminArea: 'NombreMunicipioEmpresa',\n    address: 'DireccionEmpresa',\n  };\n}\n\n/**\n * Cuestionario de chequeo médico COVID-19.\n */\nexport class Poll extends Entity {\n  /**\n   * Preguntas del cuestionario.\n   */\n  questions: Question[];\n\n  /**\n   * Ubicación del dispositivo desde el que se envían las preguntas del cuestionario.\n   */\n  geolocation: Geolocation;\n\n  /**\n   * Datos de usuario.\n   */\n  userData: UserData;\n\n  /**\n   * Datos de la compañía o contratante.\n   */\n  companyData: CompanyData;\n\n  /**\n   * Fecha de aplicación del cuestionario.\n   */\n  date: string;\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    let ret = {};\n\n    this.questions = this.questions ? this.questions : [];\n    this.geolocation = this.geolocation ? this.geolocation : new Geolocation();\n    this.userData = this.userData ? this.userData : new UserData();\n    this.companyData = this.companyData ? this.companyData : new CompanyData();\n\n    this.questions.forEach(q => {\n      ret = { ...ret, ...q.deserialize() };\n    });\n\n    ret = { ...ret, ...this.geolocation.deserialize() };\n    ret = { ...ret, ...this.userData.deserialize() };\n    ret = { ...ret, ...this.companyData.deserialize() };\n\n    return ret;\n  }\n}\n","/**\n * Parámetros de ubicación física.\n */\nexport class Geolocation {\n  /**\n   * Latitud.\n   */\n  latitude: string;\n\n  /**\n   * Longitud.\n   */\n  longitude: string;\n\n  /**\n   * Dirección.\n   */\n  address: string;\n\n  /**\n   * Nombres de los campos de las preguntas. Esto concuerda con el nombre que recibe el servicio.\n   */\n  private readonly FIELD_NAMES = {\n    latitude: 'Latitud',\n    longitude: 'Longitud',\n    address: 'Direccion',\n  };\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    return {\n      [this.FIELD_NAMES.latitude]: this.latitude,\n      [this.FIELD_NAMES.longitude]: this.longitude,\n      [this.FIELD_NAMES.address]: this.address,\n    };\n  }\n}\n\n/**\n * Datos del usuario que realiza el cuestionario de autoevaluación COVID-19.\n */\nexport class UserData {\n  /**\n   * Primer nombre.\n   */\n  firstName: string;\n\n  /**\n   * Segundo nombre.\n   */\n  middleName: string;\n\n  /**\n   * Primer apellido.\n   */\n  surname: string;\n\n  /**\n   * Segundo apellido.\n   */\n  secondSurname: string;\n\n  /**\n   * Dirección de correo electrónico.\n   */\n  email: string;\n\n  /**\n   * Número telefónico.\n   */\n  phone: string;\n\n  /**\n   * Dirección _IP_.\n   */\n  ip: string;\n\n  /**\n   * Tipo de documento de identificación.\n   */\n  idType: string;\n\n  /**\n   * Número del documento de identificación.\n   */\n  idNumber: string;\n\n  /**\n   * Sexo del trabajador.\n   */\n  sex: string;\n\n  /**\n   * Fecha de nacimiento.\n   */\n  birthday: string;\n\n  /**\n   * Identificador de EPS.\n   */\n  idEPS: string;\n\n  /**\n   * Nombre de EPS.\n   */\n  nameEPS: string;\n\n  /**\n   * Dirección.\n   */\n  address: string;\n\n  /**\n   * Identificador de la ocupación.\n   */\n  bussinessID: string;\n\n  /**\n   * Nombre de la ocupación.\n   */\n  businessName: string;\n\n  /**\n   * Identificador del departamento de ubicación.\n   */\n  idAdminArea: number;\n\n  /**\n   * Nombre del departamento de ubicación.\n   */\n  nameAdminArea: string;\n\n  /**\n   * Identificador del municipio de ubicación.\n   */\n  idSubAdminArea: number;\n\n  /**\n   * Nombre del municipio de ubicación.\n   */\n  nameSubAdminArea: string;\n\n  /**\n   * Indica si el usuario ha aceptado la política de tratamiento de datos personales.\n   */\n  agree: boolean;\n\n  /**\n   * Nombres de los campos de las preguntas. Esto concuerda con el nombre que recibe el servicio.\n   */\n  protected readonly FIELD_NAMES = {\n    firstName: 'NombreTrabajador',\n    middleName: 'SegundoNombreTrabajador',\n    surname: 'ApellidosUsuario',\n    secondSurname: 'SegundoApellidoTrabajador',\n    email: 'CorreoTrabajador',\n    phone: 'telefonoTrabajador',\n    ip: 'Direccion_Ip',\n    idType: 'TipoDocumentoTrabajador',\n    idNumber: 'NumeroDocumentoTrabajador',\n    sex: 'SEXO',\n    birthday: 'FECHA_NACIMIENTO',\n    idEPS: 'ID_EPS',\n    nameEPS: 'NOMBRE_EPS',\n    address: 'DIRECCION_PERSONA',\n    bussinessID: 'ID_OCUPACION',\n    businessName: 'NOMBRE_OCUPACION',\n    idAdminArea: 'ID_DEPARTAMENTO',\n    nameAdminArea: 'NOMBRE_DEPARTAMENTO',\n    idSubAdminArea: 'ID_MUNICIPIO',\n    nameSubAdminArea: 'NOMBRE_MUNICIPIO',\n    agree: 'AceptaParticipacion',\n  };\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    return {\n      [this.FIELD_NAMES.firstName]: this.firstName,\n      [this.FIELD_NAMES.middleName]: this.middleName,\n      [this.FIELD_NAMES.surname]: this.surname,\n      [this.FIELD_NAMES.secondSurname]: this.secondSurname,\n      [this.FIELD_NAMES.email]: this.email,\n      [this.FIELD_NAMES.phone]: this.phone,\n      [this.FIELD_NAMES.ip]: this.ip,\n      [this.FIELD_NAMES.idType]: this.idType,\n      [this.FIELD_NAMES.idNumber]: this.idNumber,\n      [this.FIELD_NAMES.sex]: this.sex,\n      [this.FIELD_NAMES.birthday]: this.birthday,\n      [this.FIELD_NAMES.idEPS]: this.idEPS,\n      [this.FIELD_NAMES.nameEPS]: this.nameEPS,\n      [this.FIELD_NAMES.address]: this.address,\n      [this.FIELD_NAMES.bussinessID]: this.bussinessID,\n      [this.FIELD_NAMES.businessName]: this.businessName,\n      [this.FIELD_NAMES.idAdminArea]: this.idAdminArea,\n      [this.FIELD_NAMES.nameAdminArea]: this.nameAdminArea,\n      [this.FIELD_NAMES.idSubAdminArea]: this.idSubAdminArea,\n      [this.FIELD_NAMES.nameSubAdminArea]: this.nameSubAdminArea,\n      [this.FIELD_NAMES.agree]: this.agree,\n    };\n  }\n}\n\n/**\n * Datos de la compañía o contratante que emplea al usuario que realiza la encuesta.\n */\nexport class CompanyData {\n  /**\n   * Tipo de documento de identificación.\n   */\n  idType: string;\n\n  /**\n   * Número de información tributaria.\n   */\n  idNumber: string;\n\n  /**\n   * Razón social.\n   */\n  businessName: string;\n\n  /**\n   * Identificador de actividad económica.\n   */\n  businessID: number;\n\n  /**\n   * Descripción de actividad económica.\n   */\n  businessDescription: string;\n\n  /**\n   * Identificador del departamento de ubicación.\n   */\n  idAdminArea: number;\n\n  /**\n   * Nombre del departamento de ubicación.\n   */\n  nameAdminArea: string;\n\n  /**\n   * Identificador del municipio de ubicación.\n   */\n  idSubAdminArea: number;\n\n  /**\n   * Nombre del municipio de ubicación.\n   */\n  nameSubAdminArea: string;\n\n  /**\n   * Dirección.\n   */\n  address: string;\n\n  /**\n   * Nombres de los campos de las preguntas. Esto concuerda con el nombre que recibe el servicio.\n   */\n  protected readonly FIELD_NAMES = {\n    idType: 'tipoDocEmpresa',\n    idNumber: 'NitEmpresa',\n    businessName: 'RazonSocial',\n    businessID: 'ActividadEconomicaPrincipal',\n    businessDescription: 'DescripcionActivdadEconomicaPrincipal',\n    idAdminArea: 'IDDepartamentoEmpresa',\n    nameAdminArea: 'NombreDepartamentoEmpresa',\n    idSubAdminArea: 'IDMunicipioEmpresa',\n    nameSubAdminArea: 'NombreMunicipioEmpresa',\n    address: 'DireccionEmpresa',\n  };\n\n  /**\n   * Convierte el objeto en su representación lista para el consumo.\n   */\n  deserialize(): any {\n    return {\n      [this.FIELD_NAMES.idType]: this.idType,\n      [this.FIELD_NAMES.idNumber]: this.idNumber,\n      [this.FIELD_NAMES.businessName]: this.businessName,\n      [this.FIELD_NAMES.businessID]: this.businessID,\n      [this.FIELD_NAMES.businessDescription]: this.businessDescription,\n      [this.FIELD_NAMES.idAdminArea]: this.idAdminArea,\n      [this.FIELD_NAMES.nameAdminArea]: this.nameAdminArea,\n      [this.FIELD_NAMES.idSubAdminArea]: this.idSubAdminArea,\n      [this.FIELD_NAMES.nameSubAdminArea]: this.nameSubAdminArea,\n      [this.FIELD_NAMES.address]: this.address,\n    };\n  }\n}\n","import { Entity } from './entity';\n\nexport class Proceso extends Entity {\n  get nombre(): string {\n    return this._nombre;\n  }\n\n  set nombre(nombre: string) {\n    this._nombre = nombre;\n  }\n\n  private _nombre: string;\n\n  static parse(json: any[]): Proceso[] {\n    return json.map((item: any) => new Proceso(item));\n  }\n\n  constructor(json: any) {\n    super(json.Id_Proceso);\n    this._nombre = json.Descripcion;\n  }\n}\n","import { Entity } from './entity';\n\nexport class Sede extends Entity {\n  get nombre(): string {\n    return this._nombre;\n  }\n\n  set nombre(nombre: string) {\n    this._nombre = nombre;\n  }\n\n  private _nombre: string;\n\n  static parse(json: any[]): Sede[] {\n    return json.map((item: any) => new Sede(item));\n  }\n\n  constructor(json: any) {\n    super(json.IdSede);\n    this._nombre = json.NombreSede;\n  }\n}\n","import { Entity } from './entity';\n\nexport class TemaAsesoria extends Entity {\n  get nombre(): string {\n    return this._nombre;\n  }\n\n  set nombre(nombre: string) {\n    this._nombre = nombre;\n  }\n\n  get observacion(): string {\n    return this._observacion;\n  }\n\n  set observacion(observacion: string) {\n    this._observacion = observacion;\n  }\n\n  private _nombre: string;\n\n  private _observacion: string;\n\n  static parse(json: any[]) {\n    return json.map((item: any) => new TemaAsesoria(item));\n  }\n\n  constructor(json: any) {\n    super(json.PK_ID_EVTemasAgendamiento);\n    this._nombre = json.strDescripcionTemaEvento;\n    this._observacion = json.strObservacionesTemaEvento;\n  }\n}\n","export class EDInfoAuditoriaAPP {\n  strIdentificacionUsuario: string;\n  strNombreUsuario: string;\n  strNombreEmpresa: string;\n  strTipoDocEmpresa: string;\n  strDocumentoEmpresa: string;\n  strUUID: string;\n  strLatitud: string;\n  strLongitud: string;\n\n  constructor() {\n    this.strIdentificacionUsuario = '';\n    this.strNombreUsuario = '';\n    this.strNombreEmpresa = '';\n    this.strTipoDocEmpresa = '';\n    this.strDocumentoEmpresa = '';\n    this.strUUID = '';\n    this.strLatitud = '';\n    this.strLongitud = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuSSTService {\n  private menuSSTSource = new BehaviorSubject<boolean>(false);\n  private menuPlanEmergencia = new BehaviorSubject<boolean>(false);\n  menuSST = this.menuSSTSource.asObservable();\n  menuPlan = this.menuPlanEmergencia.asObservable();\n\n  constructor() {}\n\n  changeMenuSST(menuSST: boolean) {\n    this.menuSSTSource.next(menuSST);\n  }\n  changeMenuPlan(menuPlan: boolean) {\n    this.menuPlanEmergencia.next(menuPlan);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { AsesoriaSst } from '../entities/asesoria-sst';\nimport { ContextService } from './context.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AsesoriaSstService {\n\n  constructor(\n    private http: HttpClient,\n    private context: ContextService\n  ) { }\n\n  getListaMaestros(): Observable<any> {\n    const url = `${this.context.getEnvUrl().call(null, 'participacion')}/EnVivoServicio/listar-Maestros-EnVivo`;\n    return this.http.get(url);\n  }\n\n  getExpertosTecnicos(idTema: number): Observable<any> {\n    const url = `${this.context.getEnvUrl().call(null, 'participacion')}/EnVivoServicio/listar-ExpertoTecnico?Fk_Id_Tema=${idTema}`;\n    return this.http.get(url);\n  }\n\n  getAgendaDisponible(intFk_Id_Tema, intIDUsuarioExpertoTecnico, strFechaConsulta, strTipoAgenda, strToken): Observable<any> {\n    const url = `${this.context.getEnvUrl().call(null, 'participacion')}/EnVivoServicio/listar-AgendaExpertoTecnicoAPP`;\n    const data = {\n      strTipoAgenda,\n      strFechaConsulta,\n      intIDUsuarioExpertoTecnico,\n      strToken,\n      intFk_Id_Tema\n    };\n\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n\n    return this.http.post(url, data, { headers });\n  }\n\n  agendar(data: any): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'participacion') + '/EnVivoServicio/guardar-CitaUsuaroAPP';\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return this.http.post(url, data, { headers });\n  }\n\n  reagendar(data): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'participacion') + '/EnVivoServicio/reagendar-CitaUsuaroAPP';\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return this.http.post(url, data, { headers });\n  }\n\n  consultar(strFechaInicioBusqueda, strFechaFinalBusqueda, strNumeroDocumentoUsuario, strDocumentoEmpresa, intFk_ID_Tema_Agendamiento): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'participacion') + '/EnVivoServicio/listar-HistorialAgemdamiento';\n    let headers = new HttpHeaders();\n    const data = {\n      strFechaInicioBusqueda,\n      strFechaFinalBusqueda,\n      strNumeroDocumentoUsuario,\n      strDocumentoEmpresa,\n      intFk_ID_Tema_Agendamiento,\n      intNumeroPagina: \"1\",\n      intPageSize: \"10\"\n    };\n\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return this.http.post(url, data, { headers });\n  }\n\n  cancelar(strToken: string, strIP: string): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'participacion') + '/EnVivoServicio/cancelar-cita-APP';\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return this.http.post(url, { strToken, strIP }, { headers });\n  }\n\n  recordarPIN(strToken: string): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'participacion') + '/EnVivoServicio/recordar-PIN-APP';\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return this.http.post(url, { strToken }, { headers });\n  }\n\n  reconfirmar(strToken: string): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'participacion') + '/EnVivoServicio/reconfirmar-cita-APP';\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json;charset=UTF-8');\n    return this.http.post(url, { strToken }, { headers });\n  }\n\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ContextService } from './context.service';\n\n/**\n * Proveedor de servicios para el módulo de autoevaluación COVID-19.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutoevaluacionCOVID19Service {\n\n  /**\n   * URI del servicio para obtener las preguntas del cuestionario de autoevaluación COVID-19.\n   */\n  private readonly QUESTIONS_URI = '/Covid/preguntas-covid';\n\n  /**\n   * URI del servicio para guardar la autoevaluación COVID-19.\n   */\n  private readonly POLL_URI = '/Covid/guardar-covid-app';\n\n  /**\n   * URI del servicio para obtener correo electrónico y número de teléfono actualizado del usuario.\n   */\n  private readonly UPDATED_DATA_URI = '/Covid/validar-correo-covid-app';\n\n  constructor(\n    private http: HttpClient,\n    private context: ContextService\n  ) { }\n\n  /**\n   * Obtiene las preguntas de la encuesta de autoevaluación COVID-19.\n   */\n  getQuestions(): Observable<any> {\n    const domain = this.context.getEnvUrl().call(null, 'covid');\n    const url = `${domain}${this.QUESTIONS_URI}`;\n\n    return this.http.get(url);\n  }\n\n  /**\n   * Envía la encuesta al servicio para su registro.\n   *\n   * @param poll Parámetros de la encuesta.\n   */\n  submitPoll(poll: any): Observable<any> {\n    const domain = this.context.getEnvUrl().call(null, 'covid');\n    const url = `${domain}${this.POLL_URI}`;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n    const body = new HttpParams({ fromObject: poll });\n\n    return this.http.post(url, body, { headers });\n  }\n\n  /**\n   * Obtiene correo electrónico y número de teléfono actualizado del usuario.\n   *\n   * @param data Datos de usuario.\n   */\n  getUpdatedUserData(data: any): Observable<any> {\n    const domain = this.context.getEnvUrl().call(null, 'covid');\n    const url = `${domain}${this.UPDATED_DATA_URI}`;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n    const body = new HttpParams({ fromObject: data });\n\n    return this.http.post(url, body, { headers });\n  }\n\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ContextService } from './context.service';\n\n/**\n * Proveedor de servicios para el módulo de encuesta de chequeos médicos.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChequeosCOVID19Service {\n\n  /**\n   * URI del servicio para guardar las encuesta de chequeos médicos.\n   */\n  private readonly POLL_URI = '/Covid/guardar-chequeosMedicos-app';\n\n  /**\n   * URI del servicio para verificar última fecha de encuesta de chequeo médico.\n   */\n  private readonly CHECK_POLL_URI = '/Covid/validar-ventana-chequeo-medico';\n\n  constructor(\n    private http: HttpClient,\n    private context: ContextService\n  ) { }\n\n  /**\n   * Envía la encuesta al servicio para su registro.\n   *\n   * @param poll Parámetros de la encuesta.\n   */\n  submitPoll(poll: any): Observable<any> {\n    const domain = this.context.getEnvUrl().call(null, 'covid');\n    const url = `${domain}${this.POLL_URI}`;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n    const body = new HttpParams({ fromObject: poll });\n\n    return this.http.post(url, body, { headers });\n  }\n\n  /**\n   * Comprueba la fecha del último chequeo médico.\n   *\n   * @param data Datos de la petición.\n   */\n  checkPoll(data: any): Observable<any> {\n    const domain = this.context.getEnvUrl().call(null, 'covid');\n    const url = `${domain}${this.CHECK_POLL_URI}`;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n    const body = new HttpParams({ fromObject: data });\n\n    return this.http.post(url, body, { headers });\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ContextService } from './context.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaService {\n\n  constructor(\n    private http: HttpClient,\n    private context: ContextService\n  ) { }\n\n  getSedes(nit: string): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'empresa') + '/Empresa/empresa-sedesnit?NIT=' + nit;\n    return this.http.get(url);\n  }\n\n  getProcesos(nit: string): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'empresa') + '/Empresa/empresa-procesos?NIT=' + nit;\n    return this.http.get(url);\n  }\n\n  getNombreLogo(nit: string): Observable<any> {\n    const url = this.context.getEnvUrl().call(null, 'empresa') + '/Empresa/Obtener-Logo-Empresa?nitempresa=' + nit;\n    console.log('url: ' + url);\n    return this.http.get(url);\n  }\n\n  getUrlLogo(nombre: string): string {\n    return this.context.getAlisstaWeb() + \"/Logo_Empresa/\" + nombre;\n  }\n}\n"]}